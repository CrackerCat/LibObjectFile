//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

#pragma warning disable 1591

namespace LibObjectFile.Dwarf
{
    public static partial class DwarfNative
    {
        public const ushort DW_TAG_array_type = 1;
        
        public const ushort DW_TAG_class_type = 2;
        
        public const ushort DW_TAG_entry_point = 3;
        
        public const ushort DW_TAG_enumeration_type = 4;
        
        public const ushort DW_TAG_formal_parameter = 5;
        
        public const ushort DW_TAG_imported_declaration = 8;
        
        public const ushort DW_TAG_label = 10;
        
        public const ushort DW_TAG_lexical_block = 11;
        
        public const ushort DW_TAG_member = 13;
        
        public const ushort DW_TAG_pointer_type = 15;
        
        public const ushort DW_TAG_reference_type = 16;
        
        public const ushort DW_TAG_compile_unit = 17;
        
        public const ushort DW_TAG_string_type = 18;
        
        public const ushort DW_TAG_structure_type = 19;
        
        public const ushort DW_TAG_subroutine_type = 21;
        
        public const ushort DW_TAG_typedef = 22;
        
        public const ushort DW_TAG_union_type = 23;
        
        public const ushort DW_TAG_unspecified_parameters = 24;
        
        public const ushort DW_TAG_variant = 25;
        
        public const ushort DW_TAG_common_block = 26;
        
        public const ushort DW_TAG_common_inclusion = 27;
        
        public const ushort DW_TAG_inheritance = 28;
        
        public const ushort DW_TAG_inlined_subroutine = 29;
        
        public const ushort DW_TAG_module = 30;
        
        public const ushort DW_TAG_ptr_to_member_type = 31;
        
        public const ushort DW_TAG_set_type = 32;
        
        public const ushort DW_TAG_subrange_type = 33;
        
        public const ushort DW_TAG_with_stmt = 34;
        
        public const ushort DW_TAG_access_declaration = 35;
        
        public const ushort DW_TAG_base_type = 36;
        
        public const ushort DW_TAG_catch_block = 37;
        
        public const ushort DW_TAG_const_type = 38;
        
        public const ushort DW_TAG_constant = 39;
        
        public const ushort DW_TAG_enumerator = 40;
        
        public const ushort DW_TAG_file_type = 41;
        
        public const ushort DW_TAG_friend = 42;
        
        public const ushort DW_TAG_namelist = 43;
        
        /// <summary>
        /// DWARF3/2 spelling
        /// </summary>
        public const ushort DW_TAG_namelist_item = 44;
        
        /// <summary>
        /// SGI misspelling/typo
        /// </summary>
        public const ushort DW_TAG_namelist_items = 44;
        
        public const ushort DW_TAG_packed_type = 45;
        
        public const ushort DW_TAG_subprogram = 46;
        
        /// <summary>
        /// DWARF3/2 spelling
        /// </summary>
        public const ushort DW_TAG_template_type_parameter = 47;
        
        /// <summary>
        /// DWARF2   spelling
        /// </summary>
        public const ushort DW_TAG_template_type_param = 47;
        
        /// <summary>
        /// DWARF3/2 spelling
        /// </summary>
        public const ushort DW_TAG_template_value_parameter = 48;
        
        /// <summary>
        /// DWARF2   spelling
        /// </summary>
        public const ushort DW_TAG_template_value_param = 48;
        
        public const ushort DW_TAG_thrown_type = 49;
        
        public const ushort DW_TAG_try_block = 50;
        
        public const ushort DW_TAG_variant_part = 51;
        
        public const ushort DW_TAG_variable = 52;
        
        public const ushort DW_TAG_volatile_type = 53;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_TAG_dwarf_procedure = 54;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_TAG_restrict_type = 55;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_TAG_interface_type = 56;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_TAG_namespace = 57;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_TAG_imported_module = 58;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_TAG_unspecified_type = 59;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_TAG_partial_unit = 60;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_TAG_imported_unit = 61;
        
        /// <summary>
        /// Withdrawn from DWARF3 by DWARF3f.
        /// </summary>
        public const ushort DW_TAG_mutable_type = 62;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_TAG_condition = 63;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_TAG_shared_type = 64;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_TAG_type_unit = 65;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_TAG_rvalue_reference_type = 66;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_TAG_template_alias = 67;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_TAG_coarray_type = 68;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_TAG_generic_subrange = 69;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_TAG_dynamic_type = 70;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_TAG_atomic_type = 71;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_TAG_call_site = 72;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_TAG_call_site_parameter = 73;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_TAG_skeleton_unit = 74;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_TAG_immutable_type = 75;
        
        public const ushort DW_TAG_lo_user = 16512;
        
        public const ushort DW_TAG_MIPS_loop = 16513;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_TAG_HP_array_descriptor = 16528;
        
        /// <summary>
        /// GNU. Fortran.
        /// </summary>
        public const ushort DW_TAG_format_label = 16641;
        
        /// <summary>
        /// GNU. For C++
        /// </summary>
        public const ushort DW_TAG_function_template = 16642;
        
        /// <summary>
        /// GNU. For C++
        /// </summary>
        public const ushort DW_TAG_class_template = 16643;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_TAG_GNU_BINCL = 16644;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_TAG_GNU_EINCL = 16645;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_TAG_GNU_template_template_parameter = 16646;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_TAG_GNU_template_template_param = 16646;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_TAG_GNU_template_parameter_pack = 16647;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_TAG_GNU_formal_parameter_pack = 16648;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_TAG_GNU_call_site = 16649;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_TAG_GNU_call_site_parameter = 16650;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const ushort DW_TAG_ALTIUM_circ_type = 20737;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const ushort DW_TAG_ALTIUM_mwa_circ_type = 20738;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const ushort DW_TAG_ALTIUM_rev_carry_type = 20739;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const ushort DW_TAG_ALTIUM_rom = 20753;
        
        /// <summary>
        /// UPC
        /// </summary>
        public const ushort DW_TAG_upc_shared_type = 34661;
        
        /// <summary>
        /// UPC
        /// </summary>
        public const ushort DW_TAG_upc_strict_type = 34662;
        
        /// <summary>
        /// UPC
        /// </summary>
        public const ushort DW_TAG_upc_relaxed_type = 34663;
        
        /// <summary>
        /// PGI
        /// </summary>
        public const ushort DW_TAG_PGI_kanji_type = 40960;
        
        /// <summary>
        /// PGI
        /// </summary>
        public const ushort DW_TAG_PGI_interface_block = 40992;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_function_template = 16897;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_class_template = 16898;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_struct_template = 16899;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_union_template = 16900;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_indirect_inheritance = 16901;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_codeflags = 16902;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_memop_info = 16903;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_omp_child_func = 16904;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_rtti_descriptor = 16905;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_dtor_info = 16906;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_dtor = 16907;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_f90_interface = 16908;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_fortran_vax_structure = 16909;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_TAG_SUN_hi = 17151;
        
        public const ushort DW_TAG_hi_user = 65535;
        
        public const ushort DW_FORM_addr = 1;
        
        public const ushort DW_FORM_block2 = 3;
        
        public const ushort DW_FORM_block4 = 4;
        
        public const ushort DW_FORM_data2 = 5;
        
        public const ushort DW_FORM_data4 = 6;
        
        public const ushort DW_FORM_data8 = 7;
        
        public const ushort DW_FORM_string = 8;
        
        public const ushort DW_FORM_block = 9;
        
        public const ushort DW_FORM_block1 = 10;
        
        public const ushort DW_FORM_data1 = 11;
        
        public const ushort DW_FORM_flag = 12;
        
        public const ushort DW_FORM_sdata = 13;
        
        public const ushort DW_FORM_strp = 14;
        
        public const ushort DW_FORM_udata = 15;
        
        public const ushort DW_FORM_ref_addr = 16;
        
        public const ushort DW_FORM_ref1 = 17;
        
        public const ushort DW_FORM_ref2 = 18;
        
        public const ushort DW_FORM_ref4 = 19;
        
        public const ushort DW_FORM_ref8 = 20;
        
        public const ushort DW_FORM_ref_udata = 21;
        
        public const ushort DW_FORM_indirect = 22;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_FORM_sec_offset = 23;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_FORM_exprloc = 24;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_FORM_flag_present = 25;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_strx = 26;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_addrx = 27;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_ref_sup4 = 28;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_strp_sup = 29;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_data16 = 30;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_line_strp = 31;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_FORM_ref_sig8 = 32;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_implicit_const = 33;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_loclistx = 34;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_rnglistx = 35;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_ref_sup8 = 36;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_strx1 = 37;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_strx2 = 38;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_strx3 = 39;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_strx4 = 40;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_addrx1 = 41;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_addrx2 = 42;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_addrx3 = 43;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_FORM_addrx4 = 44;
        
        /// <summary>
        /// GNU extension in debug_info.dwo.
        /// </summary>
        public const ushort DW_FORM_GNU_addr_index = 7937;
        
        /// <summary>
        /// GNU extension, somewhat like DW_FORM_strp
        /// </summary>
        public const ushort DW_FORM_GNU_str_index = 7938;
        
        /// <summary>
        /// GNU extension. Offset in .debug_info.
        /// </summary>
        public const ushort DW_FORM_GNU_ref_alt = 7968;
        
        /// <summary>
        /// GNU extension. Offset in .debug_str of another object file.
        /// </summary>
        public const ushort DW_FORM_GNU_strp_alt = 7969;
        
        public const ushort DW_AT_sibling = 1;
        
        public const ushort DW_AT_location = 2;
        
        public const ushort DW_AT_name = 3;
        
        public const ushort DW_AT_ordering = 9;
        
        public const ushort DW_AT_subscr_data = 10;
        
        public const ushort DW_AT_byte_size = 11;
        
        public const ushort DW_AT_bit_offset = 12;
        
        public const ushort DW_AT_bit_size = 13;
        
        public const ushort DW_AT_element_list = 15;
        
        public const ushort DW_AT_stmt_list = 16;
        
        public const ushort DW_AT_low_pc = 17;
        
        public const ushort DW_AT_high_pc = 18;
        
        public const ushort DW_AT_language = 19;
        
        public const ushort DW_AT_member = 20;
        
        public const ushort DW_AT_discr = 21;
        
        public const ushort DW_AT_discr_value = 22;
        
        public const ushort DW_AT_visibility = 23;
        
        public const ushort DW_AT_import = 24;
        
        public const ushort DW_AT_string_length = 25;
        
        public const ushort DW_AT_common_reference = 26;
        
        public const ushort DW_AT_comp_dir = 27;
        
        public const ushort DW_AT_const_value = 28;
        
        public const ushort DW_AT_containing_type = 29;
        
        public const ushort DW_AT_default_value = 30;
        
        public const ushort DW_AT_inline = 32;
        
        public const ushort DW_AT_is_optional = 33;
        
        public const ushort DW_AT_lower_bound = 34;
        
        public const ushort DW_AT_producer = 37;
        
        public const ushort DW_AT_prototyped = 39;
        
        public const ushort DW_AT_return_addr = 42;
        
        public const ushort DW_AT_start_scope = 44;
        
        /// <summary>
        /// DWARF3 name
        /// </summary>
        public const ushort DW_AT_bit_stride = 46;
        
        /// <summary>
        /// DWARF2 name
        /// </summary>
        public const ushort DW_AT_stride_size = 46;
        
        public const ushort DW_AT_upper_bound = 47;
        
        public const ushort DW_AT_abstract_origin = 49;
        
        public const ushort DW_AT_accessibility = 50;
        
        public const ushort DW_AT_address_class = 51;
        
        public const ushort DW_AT_artificial = 52;
        
        public const ushort DW_AT_base_types = 53;
        
        public const ushort DW_AT_calling_convention = 54;
        
        public const ushort DW_AT_count = 55;
        
        public const ushort DW_AT_data_member_location = 56;
        
        public const ushort DW_AT_decl_column = 57;
        
        public const ushort DW_AT_decl_file = 58;
        
        public const ushort DW_AT_decl_line = 59;
        
        public const ushort DW_AT_declaration = 60;
        
        /// <summary>
        /// DWARF2
        /// </summary>
        public const ushort DW_AT_discr_list = 61;
        
        public const ushort DW_AT_encoding = 62;
        
        public const ushort DW_AT_external = 63;
        
        public const ushort DW_AT_frame_base = 64;
        
        public const ushort DW_AT_friend = 65;
        
        public const ushort DW_AT_identifier_case = 66;
        
        /// <summary>
        /// DWARF{234} not DWARF5
        /// </summary>
        public const ushort DW_AT_macro_info = 67;
        
        public const ushort DW_AT_namelist_item = 68;
        
        public const ushort DW_AT_priority = 69;
        
        public const ushort DW_AT_segment = 70;
        
        public const ushort DW_AT_specification = 71;
        
        public const ushort DW_AT_static_link = 72;
        
        public const ushort DW_AT_type = 73;
        
        public const ushort DW_AT_use_location = 74;
        
        public const ushort DW_AT_variable_parameter = 75;
        
        public const ushort DW_AT_virtuality = 76;
        
        public const ushort DW_AT_vtable_elem_location = 77;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_allocated = 78;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_associated = 79;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_data_location = 80;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_byte_stride = 81;
        
        /// <summary>
        /// DWARF3 (do not use)
        /// </summary>
        public const ushort DW_AT_stride = 81;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_entry_pc = 82;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_use_UTF8 = 83;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_extension = 84;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_ranges = 85;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_trampoline = 86;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_call_column = 87;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_call_file = 88;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_call_line = 89;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_AT_description = 90;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_binary_scale = 91;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_decimal_scale = 92;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_small = 93;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_decimal_sign = 94;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_digit_count = 95;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_picture_string = 96;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_mutable = 97;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_threads_scaled = 98;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_explicit = 99;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_object_pointer = 100;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_endianity = 101;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_elemental = 102;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_pure = 103;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_AT_recursive = 104;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_AT_signature = 105;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_AT_main_subprogram = 106;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_AT_data_bit_offset = 107;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_AT_const_expr = 108;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_AT_enum_class = 109;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_AT_linkage_name = 110;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_string_length_bit_size = 111;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_string_length_byte_size = 112;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_rank = 113;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_str_offsets_base = 114;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_addr_base = 115;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_rnglists_base = 116;
        
        /// <summary>
        /// DWARF4!
        /// </summary>
        public const ushort DW_AT_dwo_id = 117;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_dwo_name = 118;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_reference = 119;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_rvalue_reference = 120;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_macros = 121;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_all_calls = 122;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_all_source_calls = 123;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_all_tail_calls = 124;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_return_pc = 125;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_value = 126;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_origin = 127;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_parameter = 128;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_pc = 129;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_tail_call = 130;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_target = 131;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_target_clobbered = 132;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_data_location = 133;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_call_data_value = 134;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_noreturn = 135;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_alignment = 136;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_export_symbols = 137;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_deleted = 138;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_defaulted = 139;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_AT_loclists_base = 140;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_block_index = 8192;
        
        public const ushort DW_AT_lo_user = 8192;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_fde = 8193;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_loop_begin = 8194;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_tail_loop_begin = 8195;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_epilog_begin = 8196;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_loop_unroll_factor = 8197;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_software_pipeline_depth = 8198;
        
        /// <summary>
        /// MIPS/SGI, GNU, and others.
        /// </summary>
        public const ushort DW_AT_MIPS_linkage_name = 8199;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_stride = 8200;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_abstract_name = 8201;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_clone_origin = 8202;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_has_inlines = 8203;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_stride_byte = 8204;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_stride_elem = 8205;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_ptr_dopetype = 8206;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_allocatable_dopetype = 8207;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_assumed_shape_dopetype = 8208;
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public const ushort DW_AT_MIPS_assumed_size = 8209;
        
        /// <summary>
        /// conflict: MIPS
        /// </summary>
        public const ushort DW_AT_HP_unmodifiable = 8193;
        
        /// <summary>
        /// conflict: MIPS
        /// </summary>
        public const ushort DW_AT_HP_actuals_stmt_list = 8208;
        
        /// <summary>
        /// conflict: MIPS
        /// </summary>
        public const ushort DW_AT_HP_proc_per_section = 8209;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_raw_data_ptr = 8210;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_pass_by_reference = 8211;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_opt_level = 8212;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_prof_version_id = 8213;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_opt_flags = 8214;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_cold_region_low_pc = 8215;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_cold_region_high_pc = 8216;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_all_variables_modifiable = 8217;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_linkage_name = 8218;
        
        /// <summary>
        /// HP
        /// </summary>
        public const ushort DW_AT_HP_prof_flags = 8219;
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public const ushort DW_AT_CPQ_discontig_ranges = 8193;
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public const ushort DW_AT_CPQ_semantic_events = 8194;
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public const ushort DW_AT_CPQ_split_lifetimes_var = 8195;
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public const ushort DW_AT_CPQ_split_lifetimes_rtn = 8196;
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public const ushort DW_AT_CPQ_prologue_length = 8197;
        
        /// <summary>
        /// Intel, 1 if byte swapped.
        /// </summary>
        public const ushort DW_AT_INTEL_other_endian = 8230;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_sf_names = 8449;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_src_info = 8450;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_mac_info = 8451;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_src_coords = 8452;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_body_begin = 8453;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_body_end = 8454;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_vector = 8455;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_guarded_by = 8456;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_pt_guarded_by = 8457;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_guarded = 8458;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_pt_guarded = 8459;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_locks_excluded = 8460;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_exclusive_locks_required = 8461;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_shared_locks_required = 8462;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_odr_signature = 8463;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_template_name = 8464;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_call_site_value = 8465;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_call_site_data_value = 8466;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_call_site_target = 8467;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_call_site_target_clobbered = 8468;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_tail_call = 8469;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_all_tail_call_sites = 8470;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_all_call_sites = 8471;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_all_source_call_sites = 8472;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_macros = 8473;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_dwo_name = 8496;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_dwo_id = 8497;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_ranges_base = 8498;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_addr_base = 8499;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_pubnames = 8500;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_pubtypes = 8501;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_discriminator = 8502;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_numerator = 8963;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_denominator = 8964;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const ushort DW_AT_GNU_bias = 8965;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const ushort DW_AT_ALTIUM_loclist = 8960;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_template = 8705;
        
        /// <summary>
        /// VMS
        /// </summary>
        public const ushort DW_AT_VMS_rtnbeg_pd_address = 8705;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_alignment = 8706;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_vtable = 8707;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_count_guarantee = 8708;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_command_line = 8709;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_vbase = 8710;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_compile_options = 8711;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_language = 8712;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_browser_file = 8713;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_vtable_abi = 8720;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_func_offsets = 8721;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_cf_kind = 8722;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_vtable_index = 8723;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_omp_tpriv_addr = 8724;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_omp_child_func = 8725;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_func_offset = 8726;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_memop_type_ref = 8727;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_profile_id = 8728;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_memop_signature = 8729;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_obj_dir = 8736;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_obj_file = 8737;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_original_name = 8738;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_hwcprof_signature = 8739;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_amd64_parmdump = 8740;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_part_link_name = 8741;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_link_name = 8742;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_pass_with_const = 8743;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_return_with_const = 8744;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_import_by_name = 8745;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_f90_pointer = 8746;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_pass_by_ref = 8747;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_f90_allocatable = 8748;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_f90_assumed_shape_array = 8749;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_c_vla = 8750;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_return_value_ptr = 8752;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_dtor_start = 8753;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_dtor_length = 8754;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_dtor_state_initial = 8755;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_dtor_state_final = 8756;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_dtor_state_deltas = 8757;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_import_by_lname = 8758;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_f90_use_only = 8759;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_namelist_spec = 8760;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_is_omp_child_func = 8761;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_fortran_main_alias = 8762;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_AT_SUN_fortran_based = 8763;
        
        /// <summary>
        /// GNAT
        /// </summary>
        public const ushort DW_AT_use_GNAT_descriptive_type = 8961;
        
        /// <summary>
        /// GNAT
        /// </summary>
        public const ushort DW_AT_GNAT_descriptive_type = 8962;
        
        /// <summary>
        /// UPC
        /// </summary>
        public const ushort DW_AT_upc_threads_scaled = 12816;
        
        /// <summary>
        /// PGI. Block, constant, reference. This attribute is an ASTPLAB extension used to describe the array local base.
        /// </summary>
        public const ushort DW_AT_PGI_lbase = 14848;
        
        /// <summary>
        /// PGI. Block, constant, reference. ASTPLAB adds this attribute to describe the section offset, or the offset to the first element in the dimension.
        /// </summary>
        public const ushort DW_AT_PGI_soffset = 14849;
        
        /// <summary>
        /// PGI. Block, constant, reference. ASTPLAB adds this attribute to describe the linear stride or the distance between elements in the dimension.
        /// </summary>
        public const ushort DW_AT_PGI_lstride = 14850;
        
        /// <summary>
        /// Apple
        /// </summary>
        public const ushort DW_AT_APPLE_optimized = 16353;
        
        /// <summary>
        /// Apple
        /// </summary>
        public const ushort DW_AT_APPLE_flags = 16354;
        
        /// <summary>
        /// Apple
        /// </summary>
        public const ushort DW_AT_APPLE_isa = 16355;
        
        /// <summary>
        /// Apple
        /// </summary>
        public const ushort DW_AT_APPLE_block = 16356;
        
        /// <summary>
        /// Apple
        /// </summary>
        public const ushort DW_AT_APPLE_major_runtime_vers = 16357;
        
        /// <summary>
        /// Apple
        /// </summary>
        public const ushort DW_AT_APPLE_runtime_class = 16358;
        
        /// <summary>
        /// Apple
        /// </summary>
        public const ushort DW_AT_APPLE_omit_frame_ptr = 16359;
        
        /// <summary>
        /// Apple
        /// </summary>
        public const ushort DW_AT_APPLE_closure = 16356;
        
        public const ushort DW_AT_hi_user = 16383;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_IDX_compile_unit = 1;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_IDX_type_unit = 2;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_IDX_die_offset = 3;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_IDX_parent = 4;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_IDX_type_hash = 5;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_IDX_lo_user = 8192;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_IDX_hi_user = 4095;
        
        public const ushort DW_LANG_C89 = 1;
        
        public const ushort DW_LANG_C = 2;
        
        public const ushort DW_LANG_Ada83 = 3;
        
        public const ushort DW_LANG_C_plus_plus = 4;
        
        public const ushort DW_LANG_Cobol74 = 5;
        
        public const ushort DW_LANG_Cobol85 = 6;
        
        public const ushort DW_LANG_Fortran77 = 7;
        
        public const ushort DW_LANG_Fortran90 = 8;
        
        public const ushort DW_LANG_Pascal83 = 9;
        
        public const ushort DW_LANG_Modula2 = 10;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_LANG_Java = 11;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_LANG_C99 = 12;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_LANG_Ada95 = 13;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_LANG_Fortran95 = 14;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const ushort DW_LANG_PLI = 15;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_LANG_ObjC = 16;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_LANG_ObjC_plus_plus = 17;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_LANG_UPC = 18;
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public const ushort DW_LANG_D = 19;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const ushort DW_LANG_Python = 20;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_OpenCL = 21;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_Go = 22;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_Modula3 = 23;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_Haskel = 24;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_C_plus_plus_03 = 25;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_C_plus_plus_11 = 26;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_OCaml = 27;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_Rust = 28;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_C11 = 29;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_Swift = 30;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_Julia = 31;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_Dylan = 32;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_C_plus_plus_14 = 33;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_Fortran03 = 34;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_Fortran08 = 35;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_RenderScript = 36;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const ushort DW_LANG_BLISS = 37;
        
        public const ushort DW_LANG_lo_user = 32768;
        
        /// <summary>
        /// MIPS
        /// </summary>
        public const ushort DW_LANG_Mips_Assembler = 32769;
        
        /// <summary>
        /// UPC, use
        /// DW_LANG_UPC instead.
        /// </summary>
        public const ushort DW_LANG_Upc = 34661;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const ushort DW_LANG_ALTIUM_Assembler = 37121;
        
        /// <summary>
        /// SUN
        /// </summary>
        public const ushort DW_LANG_SUN_Assembler = 36865;
        
        public const ushort DW_LANG_hi_user = 65535;
        
        public const byte DW_ID_case_sensitive = 0;
        
        public const byte DW_ID_up_case = 1;
        
        public const byte DW_ID_down_case = 2;
        
        public const byte DW_ID_case_insensitive = 3;
        
        public const byte DW_CC_normal = 1;
        
        public const byte DW_CC_program = 2;
        
        public const byte DW_CC_nocall = 3;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const byte DW_CC_pass_by_reference = 4;
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public const byte DW_CC_pass_by_value = 5;
        
        public const byte DW_CC_lo_user = 64;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const byte DW_CC_GNU_renesas_sh = 64;
        
        /// <summary>
        /// GNU
        /// </summary>
        public const byte DW_CC_GNU_borland_fastcall_i386 = 65;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const byte DW_CC_ALTIUM_interrupt = 101;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const byte DW_CC_ALTIUM_near_system_stack = 102;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const byte DW_CC_ALTIUM_near_user_stack = 103;
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public const byte DW_CC_ALTIUM_huge_user_stack = 104;
        
        public const byte DW_CC_hi_user = 255;
        
        public const byte DW_LNS_copy = 1;
        
        public const byte DW_LNS_advance_pc = 2;
        
        public const byte DW_LNS_advance_line = 3;
        
        public const byte DW_LNS_set_file = 4;
        
        public const byte DW_LNS_set_column = 5;
        
        public const byte DW_LNS_negate_stmt = 6;
        
        public const byte DW_LNS_set_basic_block = 7;
        
        public const byte DW_LNS_const_add_pc = 8;
        
        public const byte DW_LNS_fixed_advance_pc = 9;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const byte DW_LNS_set_prologue_end = 10;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const byte DW_LNS_set_epilogue_begin = 11;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const byte DW_LNS_set_isa = 12;
        
        /// <summary>
        /// Actuals table only
        /// </summary>
        public const byte DW_LNS_set_address_from_logical = 13;
        
        /// <summary>
        /// Logicals table only
        /// </summary>
        public const byte DW_LNS_set_subprogram = 13;
        
        /// <summary>
        /// Logicals table only
        /// </summary>
        public const byte DW_LNS_inlined_call = 14;
        
        /// <summary>
        /// Logicals table only
        /// </summary>
        public const byte DW_LNS_pop_context = 15;
        
        public const byte DW_LNE_end_sequence = 1;
        
        public const byte DW_LNE_set_address = 2;
        
        /// <summary>
        /// DWARF4 and earlier only
        /// </summary>
        public const byte DW_LNE_define_file = 3;
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public const byte DW_LNE_set_discriminator = 4;
        
        /// <summary>
        /// 17 HP
        /// </summary>
        public const byte DW_LNE_HP_negate_is_UV_update = 17;
        
        /// <summary>
        /// 18 HP
        /// </summary>
        public const byte DW_LNE_HP_push_context = 18;
        
        /// <summary>
        /// 19 HP
        /// </summary>
        public const byte DW_LNE_HP_pop_context = 19;
        
        /// <summary>
        /// 20 HP
        /// </summary>
        public const byte DW_LNE_HP_set_file_line_column = 20;
        
        /// <summary>
        /// 21 HP
        /// </summary>
        public const byte DW_LNE_HP_set_routine_name = 21;
        
        /// <summary>
        /// 22 HP
        /// </summary>
        public const byte DW_LNE_HP_set_sequence = 22;
        
        /// <summary>
        /// 23 HP
        /// </summary>
        public const byte DW_LNE_HP_negate_post_semantics = 23;
        
        /// <summary>
        /// 24 HP
        /// </summary>
        public const byte DW_LNE_HP_negate_function_exit = 24;
        
        /// <summary>
        /// 25 HP
        /// </summary>
        public const byte DW_LNE_HP_negate_front_end_logical = 25;
        
        /// <summary>
        /// 32 HP
        /// </summary>
        public const byte DW_LNE_HP_define_proc = 32;
        
        /// <summary>
        /// HP
        /// </summary>
        public const byte DW_LNE_HP_source_file_correlation = 128;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const byte DW_LNE_lo_user = 128;
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public const byte DW_LNE_hi_user = 255;
        
        public const byte DW_ISA_UNKNOWN = 0;
        
        /// <summary>
        /// ARM ISA
        /// </summary>
        public const byte DW_ISA_ARM_thumb = 1;
        
        /// <summary>
        /// ARM ISA
        /// </summary>
        public const byte DW_ISA_ARM_arm = 2;
        
        public const byte DW_CHILDREN_no = 0;
        
        public const byte DW_CHILDREN_yes = 1;
    }
    
    public readonly partial struct DwarfAttributeName
    {
        public static readonly DwarfAttributeName sibling = new DwarfAttributeName(DwarfNative.DW_AT_sibling);
        
        public static readonly DwarfAttributeName location = new DwarfAttributeName(DwarfNative.DW_AT_location);
        
        public static readonly DwarfAttributeName name = new DwarfAttributeName(DwarfNative.DW_AT_name);
        
        public static readonly DwarfAttributeName ordering = new DwarfAttributeName(DwarfNative.DW_AT_ordering);
        
        public static readonly DwarfAttributeName subscr_data = new DwarfAttributeName(DwarfNative.DW_AT_subscr_data);
        
        public static readonly DwarfAttributeName byte_size = new DwarfAttributeName(DwarfNative.DW_AT_byte_size);
        
        public static readonly DwarfAttributeName bit_offset = new DwarfAttributeName(DwarfNative.DW_AT_bit_offset);
        
        public static readonly DwarfAttributeName bit_size = new DwarfAttributeName(DwarfNative.DW_AT_bit_size);
        
        public static readonly DwarfAttributeName element_list = new DwarfAttributeName(DwarfNative.DW_AT_element_list);
        
        public static readonly DwarfAttributeName stmt_list = new DwarfAttributeName(DwarfNative.DW_AT_stmt_list);
        
        public static readonly DwarfAttributeName low_pc = new DwarfAttributeName(DwarfNative.DW_AT_low_pc);
        
        public static readonly DwarfAttributeName high_pc = new DwarfAttributeName(DwarfNative.DW_AT_high_pc);
        
        public static readonly DwarfAttributeName language = new DwarfAttributeName(DwarfNative.DW_AT_language);
        
        public static readonly DwarfAttributeName member = new DwarfAttributeName(DwarfNative.DW_AT_member);
        
        public static readonly DwarfAttributeName discr = new DwarfAttributeName(DwarfNative.DW_AT_discr);
        
        public static readonly DwarfAttributeName discr_value = new DwarfAttributeName(DwarfNative.DW_AT_discr_value);
        
        public static readonly DwarfAttributeName visibility = new DwarfAttributeName(DwarfNative.DW_AT_visibility);
        
        public static readonly DwarfAttributeName import = new DwarfAttributeName(DwarfNative.DW_AT_import);
        
        public static readonly DwarfAttributeName string_length = new DwarfAttributeName(DwarfNative.DW_AT_string_length);
        
        public static readonly DwarfAttributeName common_reference = new DwarfAttributeName(DwarfNative.DW_AT_common_reference);
        
        public static readonly DwarfAttributeName comp_dir = new DwarfAttributeName(DwarfNative.DW_AT_comp_dir);
        
        public static readonly DwarfAttributeName const_value = new DwarfAttributeName(DwarfNative.DW_AT_const_value);
        
        public static readonly DwarfAttributeName containing_type = new DwarfAttributeName(DwarfNative.DW_AT_containing_type);
        
        public static readonly DwarfAttributeName default_value = new DwarfAttributeName(DwarfNative.DW_AT_default_value);
        
        public static readonly DwarfAttributeName inline = new DwarfAttributeName(DwarfNative.DW_AT_inline);
        
        public static readonly DwarfAttributeName is_optional = new DwarfAttributeName(DwarfNative.DW_AT_is_optional);
        
        public static readonly DwarfAttributeName lower_bound = new DwarfAttributeName(DwarfNative.DW_AT_lower_bound);
        
        public static readonly DwarfAttributeName producer = new DwarfAttributeName(DwarfNative.DW_AT_producer);
        
        public static readonly DwarfAttributeName prototyped = new DwarfAttributeName(DwarfNative.DW_AT_prototyped);
        
        public static readonly DwarfAttributeName return_addr = new DwarfAttributeName(DwarfNative.DW_AT_return_addr);
        
        public static readonly DwarfAttributeName start_scope = new DwarfAttributeName(DwarfNative.DW_AT_start_scope);
        
        /// <summary>
        /// DWARF3 name
        /// </summary>
        public static readonly DwarfAttributeName bit_stride = new DwarfAttributeName(DwarfNative.DW_AT_bit_stride);
        
        /// <summary>
        /// DWARF2 name
        /// </summary>
        public static readonly DwarfAttributeName stride_size = new DwarfAttributeName(DwarfNative.DW_AT_stride_size);
        
        public static readonly DwarfAttributeName upper_bound = new DwarfAttributeName(DwarfNative.DW_AT_upper_bound);
        
        public static readonly DwarfAttributeName abstract_origin = new DwarfAttributeName(DwarfNative.DW_AT_abstract_origin);
        
        public static readonly DwarfAttributeName accessibility = new DwarfAttributeName(DwarfNative.DW_AT_accessibility);
        
        public static readonly DwarfAttributeName address_class = new DwarfAttributeName(DwarfNative.DW_AT_address_class);
        
        public static readonly DwarfAttributeName artificial = new DwarfAttributeName(DwarfNative.DW_AT_artificial);
        
        public static readonly DwarfAttributeName base_types = new DwarfAttributeName(DwarfNative.DW_AT_base_types);
        
        public static readonly DwarfAttributeName calling_convention = new DwarfAttributeName(DwarfNative.DW_AT_calling_convention);
        
        public static readonly DwarfAttributeName count = new DwarfAttributeName(DwarfNative.DW_AT_count);
        
        public static readonly DwarfAttributeName data_member_location = new DwarfAttributeName(DwarfNative.DW_AT_data_member_location);
        
        public static readonly DwarfAttributeName decl_column = new DwarfAttributeName(DwarfNative.DW_AT_decl_column);
        
        public static readonly DwarfAttributeName decl_file = new DwarfAttributeName(DwarfNative.DW_AT_decl_file);
        
        public static readonly DwarfAttributeName decl_line = new DwarfAttributeName(DwarfNative.DW_AT_decl_line);
        
        public static readonly DwarfAttributeName declaration = new DwarfAttributeName(DwarfNative.DW_AT_declaration);
        
        /// <summary>
        /// DWARF2
        /// </summary>
        public static readonly DwarfAttributeName discr_list = new DwarfAttributeName(DwarfNative.DW_AT_discr_list);
        
        public static readonly DwarfAttributeName encoding = new DwarfAttributeName(DwarfNative.DW_AT_encoding);
        
        public static readonly DwarfAttributeName external = new DwarfAttributeName(DwarfNative.DW_AT_external);
        
        public static readonly DwarfAttributeName frame_base = new DwarfAttributeName(DwarfNative.DW_AT_frame_base);
        
        public static readonly DwarfAttributeName friend = new DwarfAttributeName(DwarfNative.DW_AT_friend);
        
        public static readonly DwarfAttributeName identifier_case = new DwarfAttributeName(DwarfNative.DW_AT_identifier_case);
        
        /// <summary>
        /// DWARF{234} not DWARF5
        /// </summary>
        public static readonly DwarfAttributeName macro_info = new DwarfAttributeName(DwarfNative.DW_AT_macro_info);
        
        public static readonly DwarfAttributeName namelist_item = new DwarfAttributeName(DwarfNative.DW_AT_namelist_item);
        
        public static readonly DwarfAttributeName priority = new DwarfAttributeName(DwarfNative.DW_AT_priority);
        
        public static readonly DwarfAttributeName segment = new DwarfAttributeName(DwarfNative.DW_AT_segment);
        
        public static readonly DwarfAttributeName specification = new DwarfAttributeName(DwarfNative.DW_AT_specification);
        
        public static readonly DwarfAttributeName static_link = new DwarfAttributeName(DwarfNative.DW_AT_static_link);
        
        public static readonly DwarfAttributeName type = new DwarfAttributeName(DwarfNative.DW_AT_type);
        
        public static readonly DwarfAttributeName use_location = new DwarfAttributeName(DwarfNative.DW_AT_use_location);
        
        public static readonly DwarfAttributeName variable_parameter = new DwarfAttributeName(DwarfNative.DW_AT_variable_parameter);
        
        public static readonly DwarfAttributeName virtuality = new DwarfAttributeName(DwarfNative.DW_AT_virtuality);
        
        public static readonly DwarfAttributeName vtable_elem_location = new DwarfAttributeName(DwarfNative.DW_AT_vtable_elem_location);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName allocated = new DwarfAttributeName(DwarfNative.DW_AT_allocated);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName associated = new DwarfAttributeName(DwarfNative.DW_AT_associated);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName data_location = new DwarfAttributeName(DwarfNative.DW_AT_data_location);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName byte_stride = new DwarfAttributeName(DwarfNative.DW_AT_byte_stride);
        
        /// <summary>
        /// DWARF3 (do not use)
        /// </summary>
        public static readonly DwarfAttributeName stride = new DwarfAttributeName(DwarfNative.DW_AT_stride);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName entry_pc = new DwarfAttributeName(DwarfNative.DW_AT_entry_pc);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName use_UTF8 = new DwarfAttributeName(DwarfNative.DW_AT_use_UTF8);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName extension = new DwarfAttributeName(DwarfNative.DW_AT_extension);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName ranges = new DwarfAttributeName(DwarfNative.DW_AT_ranges);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName trampoline = new DwarfAttributeName(DwarfNative.DW_AT_trampoline);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName call_column = new DwarfAttributeName(DwarfNative.DW_AT_call_column);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName call_file = new DwarfAttributeName(DwarfNative.DW_AT_call_file);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName call_line = new DwarfAttributeName(DwarfNative.DW_AT_call_line);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfAttributeName description = new DwarfAttributeName(DwarfNative.DW_AT_description);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName binary_scale = new DwarfAttributeName(DwarfNative.DW_AT_binary_scale);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName decimal_scale = new DwarfAttributeName(DwarfNative.DW_AT_decimal_scale);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName small = new DwarfAttributeName(DwarfNative.DW_AT_small);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName decimal_sign = new DwarfAttributeName(DwarfNative.DW_AT_decimal_sign);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName digit_count = new DwarfAttributeName(DwarfNative.DW_AT_digit_count);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName picture_string = new DwarfAttributeName(DwarfNative.DW_AT_picture_string);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName mutable = new DwarfAttributeName(DwarfNative.DW_AT_mutable);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName threads_scaled = new DwarfAttributeName(DwarfNative.DW_AT_threads_scaled);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName @explicit = new DwarfAttributeName(DwarfNative.DW_AT_explicit);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName object_pointer = new DwarfAttributeName(DwarfNative.DW_AT_object_pointer);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName endianity = new DwarfAttributeName(DwarfNative.DW_AT_endianity);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName elemental = new DwarfAttributeName(DwarfNative.DW_AT_elemental);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName pure = new DwarfAttributeName(DwarfNative.DW_AT_pure);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfAttributeName recursive = new DwarfAttributeName(DwarfNative.DW_AT_recursive);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeName signature = new DwarfAttributeName(DwarfNative.DW_AT_signature);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeName main_subprogram = new DwarfAttributeName(DwarfNative.DW_AT_main_subprogram);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeName data_bit_offset = new DwarfAttributeName(DwarfNative.DW_AT_data_bit_offset);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeName const_expr = new DwarfAttributeName(DwarfNative.DW_AT_const_expr);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeName enum_class = new DwarfAttributeName(DwarfNative.DW_AT_enum_class);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeName linkage_name = new DwarfAttributeName(DwarfNative.DW_AT_linkage_name);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName string_length_bit_size = new DwarfAttributeName(DwarfNative.DW_AT_string_length_bit_size);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName string_length_byte_size = new DwarfAttributeName(DwarfNative.DW_AT_string_length_byte_size);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName rank = new DwarfAttributeName(DwarfNative.DW_AT_rank);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName str_offsets_base = new DwarfAttributeName(DwarfNative.DW_AT_str_offsets_base);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName addr_base = new DwarfAttributeName(DwarfNative.DW_AT_addr_base);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName rnglists_base = new DwarfAttributeName(DwarfNative.DW_AT_rnglists_base);
        
        /// <summary>
        /// DWARF4!
        /// </summary>
        public static readonly DwarfAttributeName dwo_id = new DwarfAttributeName(DwarfNative.DW_AT_dwo_id);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName dwo_name = new DwarfAttributeName(DwarfNative.DW_AT_dwo_name);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName reference = new DwarfAttributeName(DwarfNative.DW_AT_reference);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName rvalue_reference = new DwarfAttributeName(DwarfNative.DW_AT_rvalue_reference);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName macros = new DwarfAttributeName(DwarfNative.DW_AT_macros);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_all_calls = new DwarfAttributeName(DwarfNative.DW_AT_call_all_calls);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_all_source_calls = new DwarfAttributeName(DwarfNative.DW_AT_call_all_source_calls);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_all_tail_calls = new DwarfAttributeName(DwarfNative.DW_AT_call_all_tail_calls);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_return_pc = new DwarfAttributeName(DwarfNative.DW_AT_call_return_pc);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_value = new DwarfAttributeName(DwarfNative.DW_AT_call_value);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_origin = new DwarfAttributeName(DwarfNative.DW_AT_call_origin);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_parameter = new DwarfAttributeName(DwarfNative.DW_AT_call_parameter);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_pc = new DwarfAttributeName(DwarfNative.DW_AT_call_pc);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_tail_call = new DwarfAttributeName(DwarfNative.DW_AT_call_tail_call);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_target = new DwarfAttributeName(DwarfNative.DW_AT_call_target);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_target_clobbered = new DwarfAttributeName(DwarfNative.DW_AT_call_target_clobbered);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_data_location = new DwarfAttributeName(DwarfNative.DW_AT_call_data_location);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName call_data_value = new DwarfAttributeName(DwarfNative.DW_AT_call_data_value);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName noreturn = new DwarfAttributeName(DwarfNative.DW_AT_noreturn);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName alignment = new DwarfAttributeName(DwarfNative.DW_AT_alignment);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName export_symbols = new DwarfAttributeName(DwarfNative.DW_AT_export_symbols);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName deleted = new DwarfAttributeName(DwarfNative.DW_AT_deleted);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName defaulted = new DwarfAttributeName(DwarfNative.DW_AT_defaulted);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeName loclists_base = new DwarfAttributeName(DwarfNative.DW_AT_loclists_base);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_block_index = new DwarfAttributeName(DwarfNative.DW_AT_HP_block_index);
        
        public static readonly DwarfAttributeName lo_user = new DwarfAttributeName(DwarfNative.DW_AT_lo_user);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_fde = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_fde);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_loop_begin = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_loop_begin);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_tail_loop_begin = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_tail_loop_begin);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_epilog_begin = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_epilog_begin);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_loop_unroll_factor = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_loop_unroll_factor);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_software_pipeline_depth = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_software_pipeline_depth);
        
        /// <summary>
        /// MIPS/SGI, GNU, and others.
        /// </summary>
        public static readonly DwarfAttributeName MIPS_linkage_name = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_linkage_name);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_stride = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_stride);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_abstract_name = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_abstract_name);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_clone_origin = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_clone_origin);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_has_inlines = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_has_inlines);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_stride_byte = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_stride_byte);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_stride_elem = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_stride_elem);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_ptr_dopetype = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_ptr_dopetype);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_allocatable_dopetype = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_allocatable_dopetype);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_assumed_shape_dopetype = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_assumed_shape_dopetype);
        
        /// <summary>
        /// MIPS/SGI
        /// </summary>
        public static readonly DwarfAttributeName MIPS_assumed_size = new DwarfAttributeName(DwarfNative.DW_AT_MIPS_assumed_size);
        
        /// <summary>
        /// conflict: MIPS
        /// </summary>
        public static readonly DwarfAttributeName HP_unmodifiable = new DwarfAttributeName(DwarfNative.DW_AT_HP_unmodifiable);
        
        /// <summary>
        /// conflict: MIPS
        /// </summary>
        public static readonly DwarfAttributeName HP_actuals_stmt_list = new DwarfAttributeName(DwarfNative.DW_AT_HP_actuals_stmt_list);
        
        /// <summary>
        /// conflict: MIPS
        /// </summary>
        public static readonly DwarfAttributeName HP_proc_per_section = new DwarfAttributeName(DwarfNative.DW_AT_HP_proc_per_section);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_raw_data_ptr = new DwarfAttributeName(DwarfNative.DW_AT_HP_raw_data_ptr);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_pass_by_reference = new DwarfAttributeName(DwarfNative.DW_AT_HP_pass_by_reference);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_opt_level = new DwarfAttributeName(DwarfNative.DW_AT_HP_opt_level);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_prof_version_id = new DwarfAttributeName(DwarfNative.DW_AT_HP_prof_version_id);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_opt_flags = new DwarfAttributeName(DwarfNative.DW_AT_HP_opt_flags);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_cold_region_low_pc = new DwarfAttributeName(DwarfNative.DW_AT_HP_cold_region_low_pc);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_cold_region_high_pc = new DwarfAttributeName(DwarfNative.DW_AT_HP_cold_region_high_pc);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_all_variables_modifiable = new DwarfAttributeName(DwarfNative.DW_AT_HP_all_variables_modifiable);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_linkage_name = new DwarfAttributeName(DwarfNative.DW_AT_HP_linkage_name);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfAttributeName HP_prof_flags = new DwarfAttributeName(DwarfNative.DW_AT_HP_prof_flags);
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public static readonly DwarfAttributeName CPQ_discontig_ranges = new DwarfAttributeName(DwarfNative.DW_AT_CPQ_discontig_ranges);
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public static readonly DwarfAttributeName CPQ_semantic_events = new DwarfAttributeName(DwarfNative.DW_AT_CPQ_semantic_events);
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public static readonly DwarfAttributeName CPQ_split_lifetimes_var = new DwarfAttributeName(DwarfNative.DW_AT_CPQ_split_lifetimes_var);
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public static readonly DwarfAttributeName CPQ_split_lifetimes_rtn = new DwarfAttributeName(DwarfNative.DW_AT_CPQ_split_lifetimes_rtn);
        
        /// <summary>
        /// COMPAQ/HP
        /// </summary>
        public static readonly DwarfAttributeName CPQ_prologue_length = new DwarfAttributeName(DwarfNative.DW_AT_CPQ_prologue_length);
        
        /// <summary>
        /// Intel, 1 if byte swapped.
        /// </summary>
        public static readonly DwarfAttributeName INTEL_other_endian = new DwarfAttributeName(DwarfNative.DW_AT_INTEL_other_endian);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName sf_names = new DwarfAttributeName(DwarfNative.DW_AT_sf_names);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName src_info = new DwarfAttributeName(DwarfNative.DW_AT_src_info);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName mac_info = new DwarfAttributeName(DwarfNative.DW_AT_mac_info);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName src_coords = new DwarfAttributeName(DwarfNative.DW_AT_src_coords);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName body_begin = new DwarfAttributeName(DwarfNative.DW_AT_body_begin);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName body_end = new DwarfAttributeName(DwarfNative.DW_AT_body_end);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_vector = new DwarfAttributeName(DwarfNative.DW_AT_GNU_vector);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_guarded_by = new DwarfAttributeName(DwarfNative.DW_AT_GNU_guarded_by);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_pt_guarded_by = new DwarfAttributeName(DwarfNative.DW_AT_GNU_pt_guarded_by);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_guarded = new DwarfAttributeName(DwarfNative.DW_AT_GNU_guarded);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_pt_guarded = new DwarfAttributeName(DwarfNative.DW_AT_GNU_pt_guarded);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_locks_excluded = new DwarfAttributeName(DwarfNative.DW_AT_GNU_locks_excluded);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_exclusive_locks_required = new DwarfAttributeName(DwarfNative.DW_AT_GNU_exclusive_locks_required);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_shared_locks_required = new DwarfAttributeName(DwarfNative.DW_AT_GNU_shared_locks_required);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_odr_signature = new DwarfAttributeName(DwarfNative.DW_AT_GNU_odr_signature);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_template_name = new DwarfAttributeName(DwarfNative.DW_AT_GNU_template_name);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_call_site_value = new DwarfAttributeName(DwarfNative.DW_AT_GNU_call_site_value);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_call_site_data_value = new DwarfAttributeName(DwarfNative.DW_AT_GNU_call_site_data_value);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_call_site_target = new DwarfAttributeName(DwarfNative.DW_AT_GNU_call_site_target);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_call_site_target_clobbered = new DwarfAttributeName(DwarfNative.DW_AT_GNU_call_site_target_clobbered);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_tail_call = new DwarfAttributeName(DwarfNative.DW_AT_GNU_tail_call);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_all_tail_call_sites = new DwarfAttributeName(DwarfNative.DW_AT_GNU_all_tail_call_sites);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_all_call_sites = new DwarfAttributeName(DwarfNative.DW_AT_GNU_all_call_sites);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_all_source_call_sites = new DwarfAttributeName(DwarfNative.DW_AT_GNU_all_source_call_sites);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_macros = new DwarfAttributeName(DwarfNative.DW_AT_GNU_macros);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_dwo_name = new DwarfAttributeName(DwarfNative.DW_AT_GNU_dwo_name);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_dwo_id = new DwarfAttributeName(DwarfNative.DW_AT_GNU_dwo_id);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_ranges_base = new DwarfAttributeName(DwarfNative.DW_AT_GNU_ranges_base);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_addr_base = new DwarfAttributeName(DwarfNative.DW_AT_GNU_addr_base);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_pubnames = new DwarfAttributeName(DwarfNative.DW_AT_GNU_pubnames);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_pubtypes = new DwarfAttributeName(DwarfNative.DW_AT_GNU_pubtypes);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_discriminator = new DwarfAttributeName(DwarfNative.DW_AT_GNU_discriminator);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_numerator = new DwarfAttributeName(DwarfNative.DW_AT_GNU_numerator);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_denominator = new DwarfAttributeName(DwarfNative.DW_AT_GNU_denominator);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfAttributeName GNU_bias = new DwarfAttributeName(DwarfNative.DW_AT_GNU_bias);
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public static readonly DwarfAttributeName ALTIUM_loclist = new DwarfAttributeName(DwarfNative.DW_AT_ALTIUM_loclist);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_template = new DwarfAttributeName(DwarfNative.DW_AT_SUN_template);
        
        /// <summary>
        /// VMS
        /// </summary>
        public static readonly DwarfAttributeName VMS_rtnbeg_pd_address = new DwarfAttributeName(DwarfNative.DW_AT_VMS_rtnbeg_pd_address);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_alignment = new DwarfAttributeName(DwarfNative.DW_AT_SUN_alignment);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_vtable = new DwarfAttributeName(DwarfNative.DW_AT_SUN_vtable);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_count_guarantee = new DwarfAttributeName(DwarfNative.DW_AT_SUN_count_guarantee);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_command_line = new DwarfAttributeName(DwarfNative.DW_AT_SUN_command_line);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_vbase = new DwarfAttributeName(DwarfNative.DW_AT_SUN_vbase);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_compile_options = new DwarfAttributeName(DwarfNative.DW_AT_SUN_compile_options);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_language = new DwarfAttributeName(DwarfNative.DW_AT_SUN_language);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_browser_file = new DwarfAttributeName(DwarfNative.DW_AT_SUN_browser_file);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_vtable_abi = new DwarfAttributeName(DwarfNative.DW_AT_SUN_vtable_abi);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_func_offsets = new DwarfAttributeName(DwarfNative.DW_AT_SUN_func_offsets);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_cf_kind = new DwarfAttributeName(DwarfNative.DW_AT_SUN_cf_kind);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_vtable_index = new DwarfAttributeName(DwarfNative.DW_AT_SUN_vtable_index);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_omp_tpriv_addr = new DwarfAttributeName(DwarfNative.DW_AT_SUN_omp_tpriv_addr);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_omp_child_func = new DwarfAttributeName(DwarfNative.DW_AT_SUN_omp_child_func);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_func_offset = new DwarfAttributeName(DwarfNative.DW_AT_SUN_func_offset);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_memop_type_ref = new DwarfAttributeName(DwarfNative.DW_AT_SUN_memop_type_ref);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_profile_id = new DwarfAttributeName(DwarfNative.DW_AT_SUN_profile_id);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_memop_signature = new DwarfAttributeName(DwarfNative.DW_AT_SUN_memop_signature);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_obj_dir = new DwarfAttributeName(DwarfNative.DW_AT_SUN_obj_dir);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_obj_file = new DwarfAttributeName(DwarfNative.DW_AT_SUN_obj_file);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_original_name = new DwarfAttributeName(DwarfNative.DW_AT_SUN_original_name);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_hwcprof_signature = new DwarfAttributeName(DwarfNative.DW_AT_SUN_hwcprof_signature);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_amd64_parmdump = new DwarfAttributeName(DwarfNative.DW_AT_SUN_amd64_parmdump);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_part_link_name = new DwarfAttributeName(DwarfNative.DW_AT_SUN_part_link_name);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_link_name = new DwarfAttributeName(DwarfNative.DW_AT_SUN_link_name);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_pass_with_const = new DwarfAttributeName(DwarfNative.DW_AT_SUN_pass_with_const);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_return_with_const = new DwarfAttributeName(DwarfNative.DW_AT_SUN_return_with_const);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_import_by_name = new DwarfAttributeName(DwarfNative.DW_AT_SUN_import_by_name);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_f90_pointer = new DwarfAttributeName(DwarfNative.DW_AT_SUN_f90_pointer);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_pass_by_ref = new DwarfAttributeName(DwarfNative.DW_AT_SUN_pass_by_ref);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_f90_allocatable = new DwarfAttributeName(DwarfNative.DW_AT_SUN_f90_allocatable);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_f90_assumed_shape_array = new DwarfAttributeName(DwarfNative.DW_AT_SUN_f90_assumed_shape_array);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_c_vla = new DwarfAttributeName(DwarfNative.DW_AT_SUN_c_vla);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_return_value_ptr = new DwarfAttributeName(DwarfNative.DW_AT_SUN_return_value_ptr);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_dtor_start = new DwarfAttributeName(DwarfNative.DW_AT_SUN_dtor_start);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_dtor_length = new DwarfAttributeName(DwarfNative.DW_AT_SUN_dtor_length);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_dtor_state_initial = new DwarfAttributeName(DwarfNative.DW_AT_SUN_dtor_state_initial);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_dtor_state_final = new DwarfAttributeName(DwarfNative.DW_AT_SUN_dtor_state_final);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_dtor_state_deltas = new DwarfAttributeName(DwarfNative.DW_AT_SUN_dtor_state_deltas);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_import_by_lname = new DwarfAttributeName(DwarfNative.DW_AT_SUN_import_by_lname);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_f90_use_only = new DwarfAttributeName(DwarfNative.DW_AT_SUN_f90_use_only);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_namelist_spec = new DwarfAttributeName(DwarfNative.DW_AT_SUN_namelist_spec);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_is_omp_child_func = new DwarfAttributeName(DwarfNative.DW_AT_SUN_is_omp_child_func);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_fortran_main_alias = new DwarfAttributeName(DwarfNative.DW_AT_SUN_fortran_main_alias);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfAttributeName SUN_fortran_based = new DwarfAttributeName(DwarfNative.DW_AT_SUN_fortran_based);
        
        /// <summary>
        /// GNAT
        /// </summary>
        public static readonly DwarfAttributeName use_GNAT_descriptive_type = new DwarfAttributeName(DwarfNative.DW_AT_use_GNAT_descriptive_type);
        
        /// <summary>
        /// GNAT
        /// </summary>
        public static readonly DwarfAttributeName GNAT_descriptive_type = new DwarfAttributeName(DwarfNative.DW_AT_GNAT_descriptive_type);
        
        /// <summary>
        /// UPC
        /// </summary>
        public static readonly DwarfAttributeName upc_threads_scaled = new DwarfAttributeName(DwarfNative.DW_AT_upc_threads_scaled);
        
        /// <summary>
        /// PGI. Block, constant, reference. This attribute is an ASTPLAB extension used to describe the array local base.
        /// </summary>
        public static readonly DwarfAttributeName PGI_lbase = new DwarfAttributeName(DwarfNative.DW_AT_PGI_lbase);
        
        /// <summary>
        /// PGI. Block, constant, reference. ASTPLAB adds this attribute to describe the section offset, or the offset to the first element in the dimension.
        /// </summary>
        public static readonly DwarfAttributeName PGI_soffset = new DwarfAttributeName(DwarfNative.DW_AT_PGI_soffset);
        
        /// <summary>
        /// PGI. Block, constant, reference. ASTPLAB adds this attribute to describe the linear stride or the distance between elements in the dimension.
        /// </summary>
        public static readonly DwarfAttributeName PGI_lstride = new DwarfAttributeName(DwarfNative.DW_AT_PGI_lstride);
        
        /// <summary>
        /// Apple
        /// </summary>
        public static readonly DwarfAttributeName APPLE_optimized = new DwarfAttributeName(DwarfNative.DW_AT_APPLE_optimized);
        
        /// <summary>
        /// Apple
        /// </summary>
        public static readonly DwarfAttributeName APPLE_flags = new DwarfAttributeName(DwarfNative.DW_AT_APPLE_flags);
        
        /// <summary>
        /// Apple
        /// </summary>
        public static readonly DwarfAttributeName APPLE_isa = new DwarfAttributeName(DwarfNative.DW_AT_APPLE_isa);
        
        /// <summary>
        /// Apple
        /// </summary>
        public static readonly DwarfAttributeName APPLE_block = new DwarfAttributeName(DwarfNative.DW_AT_APPLE_block);
        
        /// <summary>
        /// Apple
        /// </summary>
        public static readonly DwarfAttributeName APPLE_major_runtime_vers = new DwarfAttributeName(DwarfNative.DW_AT_APPLE_major_runtime_vers);
        
        /// <summary>
        /// Apple
        /// </summary>
        public static readonly DwarfAttributeName APPLE_runtime_class = new DwarfAttributeName(DwarfNative.DW_AT_APPLE_runtime_class);
        
        /// <summary>
        /// Apple
        /// </summary>
        public static readonly DwarfAttributeName APPLE_omit_frame_ptr = new DwarfAttributeName(DwarfNative.DW_AT_APPLE_omit_frame_ptr);
        
        /// <summary>
        /// Apple
        /// </summary>
        public static readonly DwarfAttributeName APPLE_closure = new DwarfAttributeName(DwarfNative.DW_AT_APPLE_closure);
        
        public static readonly DwarfAttributeName hi_user = new DwarfAttributeName(DwarfNative.DW_AT_hi_user);
        
        private string ToStringInternal()
        {
            switch (Value)
            {
                case DwarfNative.DW_AT_sibling: return "DW_AT_sibling";
                case DwarfNative.DW_AT_location: return "DW_AT_location";
                case DwarfNative.DW_AT_name: return "DW_AT_name";
                case DwarfNative.DW_AT_ordering: return "DW_AT_ordering";
                case DwarfNative.DW_AT_subscr_data: return "DW_AT_subscr_data";
                case DwarfNative.DW_AT_byte_size: return "DW_AT_byte_size";
                case DwarfNative.DW_AT_bit_offset: return "DW_AT_bit_offset";
                case DwarfNative.DW_AT_bit_size: return "DW_AT_bit_size";
                case DwarfNative.DW_AT_element_list: return "DW_AT_element_list";
                case DwarfNative.DW_AT_stmt_list: return "DW_AT_stmt_list";
                case DwarfNative.DW_AT_low_pc: return "DW_AT_low_pc";
                case DwarfNative.DW_AT_high_pc: return "DW_AT_high_pc";
                case DwarfNative.DW_AT_language: return "DW_AT_language";
                case DwarfNative.DW_AT_member: return "DW_AT_member";
                case DwarfNative.DW_AT_discr: return "DW_AT_discr";
                case DwarfNative.DW_AT_discr_value: return "DW_AT_discr_value";
                case DwarfNative.DW_AT_visibility: return "DW_AT_visibility";
                case DwarfNative.DW_AT_import: return "DW_AT_import";
                case DwarfNative.DW_AT_string_length: return "DW_AT_string_length";
                case DwarfNative.DW_AT_common_reference: return "DW_AT_common_reference";
                case DwarfNative.DW_AT_comp_dir: return "DW_AT_comp_dir";
                case DwarfNative.DW_AT_const_value: return "DW_AT_const_value";
                case DwarfNative.DW_AT_containing_type: return "DW_AT_containing_type";
                case DwarfNative.DW_AT_default_value: return "DW_AT_default_value";
                case DwarfNative.DW_AT_inline: return "DW_AT_inline";
                case DwarfNative.DW_AT_is_optional: return "DW_AT_is_optional";
                case DwarfNative.DW_AT_lower_bound: return "DW_AT_lower_bound";
                case DwarfNative.DW_AT_producer: return "DW_AT_producer";
                case DwarfNative.DW_AT_prototyped: return "DW_AT_prototyped";
                case DwarfNative.DW_AT_return_addr: return "DW_AT_return_addr";
                case DwarfNative.DW_AT_start_scope: return "DW_AT_start_scope";
                case DwarfNative.DW_AT_bit_stride: return "DW_AT_bit_stride - DWARF3 name";
                case DwarfNative.DW_AT_upper_bound: return "DW_AT_upper_bound";
                case DwarfNative.DW_AT_abstract_origin: return "DW_AT_abstract_origin";
                case DwarfNative.DW_AT_accessibility: return "DW_AT_accessibility";
                case DwarfNative.DW_AT_address_class: return "DW_AT_address_class";
                case DwarfNative.DW_AT_artificial: return "DW_AT_artificial";
                case DwarfNative.DW_AT_base_types: return "DW_AT_base_types";
                case DwarfNative.DW_AT_calling_convention: return "DW_AT_calling_convention";
                case DwarfNative.DW_AT_count: return "DW_AT_count";
                case DwarfNative.DW_AT_data_member_location: return "DW_AT_data_member_location";
                case DwarfNative.DW_AT_decl_column: return "DW_AT_decl_column";
                case DwarfNative.DW_AT_decl_file: return "DW_AT_decl_file";
                case DwarfNative.DW_AT_decl_line: return "DW_AT_decl_line";
                case DwarfNative.DW_AT_declaration: return "DW_AT_declaration";
                case DwarfNative.DW_AT_discr_list: return "DW_AT_discr_list - DWARF2";
                case DwarfNative.DW_AT_encoding: return "DW_AT_encoding";
                case DwarfNative.DW_AT_external: return "DW_AT_external";
                case DwarfNative.DW_AT_frame_base: return "DW_AT_frame_base";
                case DwarfNative.DW_AT_friend: return "DW_AT_friend";
                case DwarfNative.DW_AT_identifier_case: return "DW_AT_identifier_case";
                case DwarfNative.DW_AT_macro_info: return "DW_AT_macro_info - DWARF{234} not DWARF5";
                case DwarfNative.DW_AT_namelist_item: return "DW_AT_namelist_item";
                case DwarfNative.DW_AT_priority: return "DW_AT_priority";
                case DwarfNative.DW_AT_segment: return "DW_AT_segment";
                case DwarfNative.DW_AT_specification: return "DW_AT_specification";
                case DwarfNative.DW_AT_static_link: return "DW_AT_static_link";
                case DwarfNative.DW_AT_type: return "DW_AT_type";
                case DwarfNative.DW_AT_use_location: return "DW_AT_use_location";
                case DwarfNative.DW_AT_variable_parameter: return "DW_AT_variable_parameter";
                case DwarfNative.DW_AT_virtuality: return "DW_AT_virtuality";
                case DwarfNative.DW_AT_vtable_elem_location: return "DW_AT_vtable_elem_location";
                case DwarfNative.DW_AT_allocated: return "DW_AT_allocated - DWARF3";
                case DwarfNative.DW_AT_associated: return "DW_AT_associated - DWARF3";
                case DwarfNative.DW_AT_data_location: return "DW_AT_data_location - DWARF3";
                case DwarfNative.DW_AT_byte_stride: return "DW_AT_byte_stride - DWARF3f";
                case DwarfNative.DW_AT_entry_pc: return "DW_AT_entry_pc - DWARF3";
                case DwarfNative.DW_AT_use_UTF8: return "DW_AT_use_UTF8 - DWARF3";
                case DwarfNative.DW_AT_extension: return "DW_AT_extension - DWARF3";
                case DwarfNative.DW_AT_ranges: return "DW_AT_ranges - DWARF3";
                case DwarfNative.DW_AT_trampoline: return "DW_AT_trampoline - DWARF3";
                case DwarfNative.DW_AT_call_column: return "DW_AT_call_column - DWARF3";
                case DwarfNative.DW_AT_call_file: return "DW_AT_call_file - DWARF3";
                case DwarfNative.DW_AT_call_line: return "DW_AT_call_line - DWARF3";
                case DwarfNative.DW_AT_description: return "DW_AT_description - DWARF3";
                case DwarfNative.DW_AT_binary_scale: return "DW_AT_binary_scale - DWARF3f";
                case DwarfNative.DW_AT_decimal_scale: return "DW_AT_decimal_scale - DWARF3f";
                case DwarfNative.DW_AT_small: return "DW_AT_small - DWARF3f";
                case DwarfNative.DW_AT_decimal_sign: return "DW_AT_decimal_sign - DWARF3f";
                case DwarfNative.DW_AT_digit_count: return "DW_AT_digit_count - DWARF3f";
                case DwarfNative.DW_AT_picture_string: return "DW_AT_picture_string - DWARF3f";
                case DwarfNative.DW_AT_mutable: return "DW_AT_mutable - DWARF3f";
                case DwarfNative.DW_AT_threads_scaled: return "DW_AT_threads_scaled - DWARF3f";
                case DwarfNative.DW_AT_explicit: return "DW_AT_explicit - DWARF3f";
                case DwarfNative.DW_AT_object_pointer: return "DW_AT_object_pointer - DWARF3f";
                case DwarfNative.DW_AT_endianity: return "DW_AT_endianity - DWARF3f";
                case DwarfNative.DW_AT_elemental: return "DW_AT_elemental - DWARF3f";
                case DwarfNative.DW_AT_pure: return "DW_AT_pure - DWARF3f";
                case DwarfNative.DW_AT_recursive: return "DW_AT_recursive - DWARF3f";
                case DwarfNative.DW_AT_signature: return "DW_AT_signature - DWARF4";
                case DwarfNative.DW_AT_main_subprogram: return "DW_AT_main_subprogram - DWARF4";
                case DwarfNative.DW_AT_data_bit_offset: return "DW_AT_data_bit_offset - DWARF4";
                case DwarfNative.DW_AT_const_expr: return "DW_AT_const_expr - DWARF4";
                case DwarfNative.DW_AT_enum_class: return "DW_AT_enum_class - DWARF4";
                case DwarfNative.DW_AT_linkage_name: return "DW_AT_linkage_name - DWARF4";
                case DwarfNative.DW_AT_string_length_bit_size: return "DW_AT_string_length_bit_size - DWARF5";
                case DwarfNative.DW_AT_string_length_byte_size: return "DW_AT_string_length_byte_size - DWARF5";
                case DwarfNative.DW_AT_rank: return "DW_AT_rank - DWARF5";
                case DwarfNative.DW_AT_str_offsets_base: return "DW_AT_str_offsets_base - DWARF5";
                case DwarfNative.DW_AT_addr_base: return "DW_AT_addr_base - DWARF5";
                case DwarfNative.DW_AT_rnglists_base: return "DW_AT_rnglists_base - DWARF5";
                case DwarfNative.DW_AT_dwo_id: return "DW_AT_dwo_id - DWARF4!";
                case DwarfNative.DW_AT_dwo_name: return "DW_AT_dwo_name - DWARF5";
                case DwarfNative.DW_AT_reference: return "DW_AT_reference - DWARF5";
                case DwarfNative.DW_AT_rvalue_reference: return "DW_AT_rvalue_reference - DWARF5";
                case DwarfNative.DW_AT_macros: return "DW_AT_macros - DWARF5";
                case DwarfNative.DW_AT_call_all_calls: return "DW_AT_call_all_calls - DWARF5";
                case DwarfNative.DW_AT_call_all_source_calls: return "DW_AT_call_all_source_calls - DWARF5";
                case DwarfNative.DW_AT_call_all_tail_calls: return "DW_AT_call_all_tail_calls - DWARF5";
                case DwarfNative.DW_AT_call_return_pc: return "DW_AT_call_return_pc - DWARF5";
                case DwarfNative.DW_AT_call_value: return "DW_AT_call_value - DWARF5";
                case DwarfNative.DW_AT_call_origin: return "DW_AT_call_origin - DWARF5";
                case DwarfNative.DW_AT_call_parameter: return "DW_AT_call_parameter - DWARF5";
                case DwarfNative.DW_AT_call_pc: return "DW_AT_call_pc - DWARF5";
                case DwarfNative.DW_AT_call_tail_call: return "DW_AT_call_tail_call - DWARF5";
                case DwarfNative.DW_AT_call_target: return "DW_AT_call_target - DWARF5";
                case DwarfNative.DW_AT_call_target_clobbered: return "DW_AT_call_target_clobbered - DWARF5";
                case DwarfNative.DW_AT_call_data_location: return "DW_AT_call_data_location - DWARF5";
                case DwarfNative.DW_AT_call_data_value: return "DW_AT_call_data_value - DWARF5";
                case DwarfNative.DW_AT_noreturn: return "DW_AT_noreturn - DWARF5";
                case DwarfNative.DW_AT_alignment: return "DW_AT_alignment - DWARF5";
                case DwarfNative.DW_AT_export_symbols: return "DW_AT_export_symbols - DWARF5";
                case DwarfNative.DW_AT_deleted: return "DW_AT_deleted - DWARF5";
                case DwarfNative.DW_AT_defaulted: return "DW_AT_defaulted - DWARF5";
                case DwarfNative.DW_AT_loclists_base: return "DW_AT_loclists_base - DWARF5";
                case DwarfNative.DW_AT_HP_block_index: return "DW_AT_HP_block_index - HP";
                case DwarfNative.DW_AT_MIPS_fde: return "DW_AT_MIPS_fde - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_loop_begin: return "DW_AT_MIPS_loop_begin - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_tail_loop_begin: return "DW_AT_MIPS_tail_loop_begin - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_epilog_begin: return "DW_AT_MIPS_epilog_begin - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_loop_unroll_factor: return "DW_AT_MIPS_loop_unroll_factor - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_software_pipeline_depth: return "DW_AT_MIPS_software_pipeline_depth - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_linkage_name: return "DW_AT_MIPS_linkage_name - MIPS/SGI, GNU, and others.";
                case DwarfNative.DW_AT_MIPS_stride: return "DW_AT_MIPS_stride - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_abstract_name: return "DW_AT_MIPS_abstract_name - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_clone_origin: return "DW_AT_MIPS_clone_origin - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_has_inlines: return "DW_AT_MIPS_has_inlines - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_stride_byte: return "DW_AT_MIPS_stride_byte - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_stride_elem: return "DW_AT_MIPS_stride_elem - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_ptr_dopetype: return "DW_AT_MIPS_ptr_dopetype - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_allocatable_dopetype: return "DW_AT_MIPS_allocatable_dopetype - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_assumed_shape_dopetype: return "DW_AT_MIPS_assumed_shape_dopetype - MIPS/SGI";
                case DwarfNative.DW_AT_MIPS_assumed_size: return "DW_AT_MIPS_assumed_size - MIPS/SGI";
                case DwarfNative.DW_AT_HP_raw_data_ptr: return "DW_AT_HP_raw_data_ptr - HP";
                case DwarfNative.DW_AT_HP_pass_by_reference: return "DW_AT_HP_pass_by_reference - HP";
                case DwarfNative.DW_AT_HP_opt_level: return "DW_AT_HP_opt_level - HP";
                case DwarfNative.DW_AT_HP_prof_version_id: return "DW_AT_HP_prof_version_id - HP";
                case DwarfNative.DW_AT_HP_opt_flags: return "DW_AT_HP_opt_flags - HP";
                case DwarfNative.DW_AT_HP_cold_region_low_pc: return "DW_AT_HP_cold_region_low_pc - HP";
                case DwarfNative.DW_AT_HP_cold_region_high_pc: return "DW_AT_HP_cold_region_high_pc - HP";
                case DwarfNative.DW_AT_HP_all_variables_modifiable: return "DW_AT_HP_all_variables_modifiable - HP";
                case DwarfNative.DW_AT_HP_linkage_name: return "DW_AT_HP_linkage_name - HP";
                case DwarfNative.DW_AT_HP_prof_flags: return "DW_AT_HP_prof_flags - HP";
                case DwarfNative.DW_AT_INTEL_other_endian: return "DW_AT_INTEL_other_endian - Intel, 1 if byte swapped.";
                case DwarfNative.DW_AT_sf_names: return "DW_AT_sf_names - GNU";
                case DwarfNative.DW_AT_src_info: return "DW_AT_src_info - GNU";
                case DwarfNative.DW_AT_mac_info: return "DW_AT_mac_info - GNU";
                case DwarfNative.DW_AT_src_coords: return "DW_AT_src_coords - GNU";
                case DwarfNative.DW_AT_body_begin: return "DW_AT_body_begin - GNU";
                case DwarfNative.DW_AT_body_end: return "DW_AT_body_end - GNU";
                case DwarfNative.DW_AT_GNU_vector: return "DW_AT_GNU_vector - GNU";
                case DwarfNative.DW_AT_GNU_guarded_by: return "DW_AT_GNU_guarded_by - GNU";
                case DwarfNative.DW_AT_GNU_pt_guarded_by: return "DW_AT_GNU_pt_guarded_by - GNU";
                case DwarfNative.DW_AT_GNU_guarded: return "DW_AT_GNU_guarded - GNU";
                case DwarfNative.DW_AT_GNU_pt_guarded: return "DW_AT_GNU_pt_guarded - GNU";
                case DwarfNative.DW_AT_GNU_locks_excluded: return "DW_AT_GNU_locks_excluded - GNU";
                case DwarfNative.DW_AT_GNU_exclusive_locks_required: return "DW_AT_GNU_exclusive_locks_required - GNU";
                case DwarfNative.DW_AT_GNU_shared_locks_required: return "DW_AT_GNU_shared_locks_required - GNU";
                case DwarfNative.DW_AT_GNU_odr_signature: return "DW_AT_GNU_odr_signature - GNU";
                case DwarfNative.DW_AT_GNU_template_name: return "DW_AT_GNU_template_name - GNU";
                case DwarfNative.DW_AT_GNU_call_site_value: return "DW_AT_GNU_call_site_value - GNU";
                case DwarfNative.DW_AT_GNU_call_site_data_value: return "DW_AT_GNU_call_site_data_value - GNU";
                case DwarfNative.DW_AT_GNU_call_site_target: return "DW_AT_GNU_call_site_target - GNU";
                case DwarfNative.DW_AT_GNU_call_site_target_clobbered: return "DW_AT_GNU_call_site_target_clobbered - GNU";
                case DwarfNative.DW_AT_GNU_tail_call: return "DW_AT_GNU_tail_call - GNU";
                case DwarfNative.DW_AT_GNU_all_tail_call_sites: return "DW_AT_GNU_all_tail_call_sites - GNU";
                case DwarfNative.DW_AT_GNU_all_call_sites: return "DW_AT_GNU_all_call_sites - GNU";
                case DwarfNative.DW_AT_GNU_all_source_call_sites: return "DW_AT_GNU_all_source_call_sites - GNU";
                case DwarfNative.DW_AT_GNU_macros: return "DW_AT_GNU_macros - GNU";
                case DwarfNative.DW_AT_GNU_dwo_name: return "DW_AT_GNU_dwo_name - GNU";
                case DwarfNative.DW_AT_GNU_dwo_id: return "DW_AT_GNU_dwo_id - GNU";
                case DwarfNative.DW_AT_GNU_ranges_base: return "DW_AT_GNU_ranges_base - GNU";
                case DwarfNative.DW_AT_GNU_addr_base: return "DW_AT_GNU_addr_base - GNU";
                case DwarfNative.DW_AT_GNU_pubnames: return "DW_AT_GNU_pubnames - GNU";
                case DwarfNative.DW_AT_GNU_pubtypes: return "DW_AT_GNU_pubtypes - GNU";
                case DwarfNative.DW_AT_GNU_discriminator: return "DW_AT_GNU_discriminator - GNU";
                case DwarfNative.DW_AT_GNU_numerator: return "DW_AT_GNU_numerator - GNU";
                case DwarfNative.DW_AT_GNU_denominator: return "DW_AT_GNU_denominator - GNU";
                case DwarfNative.DW_AT_GNU_bias: return "DW_AT_GNU_bias - GNU";
                case DwarfNative.DW_AT_ALTIUM_loclist: return "DW_AT_ALTIUM_loclist - ALTIUM";
                case DwarfNative.DW_AT_SUN_template: return "DW_AT_SUN_template - SUN";
                case DwarfNative.DW_AT_SUN_alignment: return "DW_AT_SUN_alignment - SUN";
                case DwarfNative.DW_AT_SUN_vtable: return "DW_AT_SUN_vtable - SUN";
                case DwarfNative.DW_AT_SUN_count_guarantee: return "DW_AT_SUN_count_guarantee - SUN";
                case DwarfNative.DW_AT_SUN_command_line: return "DW_AT_SUN_command_line - SUN";
                case DwarfNative.DW_AT_SUN_vbase: return "DW_AT_SUN_vbase - SUN";
                case DwarfNative.DW_AT_SUN_compile_options: return "DW_AT_SUN_compile_options - SUN";
                case DwarfNative.DW_AT_SUN_language: return "DW_AT_SUN_language - SUN";
                case DwarfNative.DW_AT_SUN_browser_file: return "DW_AT_SUN_browser_file - SUN";
                case DwarfNative.DW_AT_SUN_vtable_abi: return "DW_AT_SUN_vtable_abi - SUN";
                case DwarfNative.DW_AT_SUN_func_offsets: return "DW_AT_SUN_func_offsets - SUN";
                case DwarfNative.DW_AT_SUN_cf_kind: return "DW_AT_SUN_cf_kind - SUN";
                case DwarfNative.DW_AT_SUN_vtable_index: return "DW_AT_SUN_vtable_index - SUN";
                case DwarfNative.DW_AT_SUN_omp_tpriv_addr: return "DW_AT_SUN_omp_tpriv_addr - SUN";
                case DwarfNative.DW_AT_SUN_omp_child_func: return "DW_AT_SUN_omp_child_func - SUN";
                case DwarfNative.DW_AT_SUN_func_offset: return "DW_AT_SUN_func_offset - SUN";
                case DwarfNative.DW_AT_SUN_memop_type_ref: return "DW_AT_SUN_memop_type_ref - SUN";
                case DwarfNative.DW_AT_SUN_profile_id: return "DW_AT_SUN_profile_id - SUN";
                case DwarfNative.DW_AT_SUN_memop_signature: return "DW_AT_SUN_memop_signature - SUN";
                case DwarfNative.DW_AT_SUN_obj_dir: return "DW_AT_SUN_obj_dir - SUN";
                case DwarfNative.DW_AT_SUN_obj_file: return "DW_AT_SUN_obj_file - SUN";
                case DwarfNative.DW_AT_SUN_original_name: return "DW_AT_SUN_original_name - SUN";
                case DwarfNative.DW_AT_SUN_hwcprof_signature: return "DW_AT_SUN_hwcprof_signature - SUN";
                case DwarfNative.DW_AT_SUN_amd64_parmdump: return "DW_AT_SUN_amd64_parmdump - SUN";
                case DwarfNative.DW_AT_SUN_part_link_name: return "DW_AT_SUN_part_link_name - SUN";
                case DwarfNative.DW_AT_SUN_link_name: return "DW_AT_SUN_link_name - SUN";
                case DwarfNative.DW_AT_SUN_pass_with_const: return "DW_AT_SUN_pass_with_const - SUN";
                case DwarfNative.DW_AT_SUN_return_with_const: return "DW_AT_SUN_return_with_const - SUN";
                case DwarfNative.DW_AT_SUN_import_by_name: return "DW_AT_SUN_import_by_name - SUN";
                case DwarfNative.DW_AT_SUN_f90_pointer: return "DW_AT_SUN_f90_pointer - SUN";
                case DwarfNative.DW_AT_SUN_pass_by_ref: return "DW_AT_SUN_pass_by_ref - SUN";
                case DwarfNative.DW_AT_SUN_f90_allocatable: return "DW_AT_SUN_f90_allocatable - SUN";
                case DwarfNative.DW_AT_SUN_f90_assumed_shape_array: return "DW_AT_SUN_f90_assumed_shape_array - SUN";
                case DwarfNative.DW_AT_SUN_c_vla: return "DW_AT_SUN_c_vla - SUN";
                case DwarfNative.DW_AT_SUN_return_value_ptr: return "DW_AT_SUN_return_value_ptr - SUN";
                case DwarfNative.DW_AT_SUN_dtor_start: return "DW_AT_SUN_dtor_start - SUN";
                case DwarfNative.DW_AT_SUN_dtor_length: return "DW_AT_SUN_dtor_length - SUN";
                case DwarfNative.DW_AT_SUN_dtor_state_initial: return "DW_AT_SUN_dtor_state_initial - SUN";
                case DwarfNative.DW_AT_SUN_dtor_state_final: return "DW_AT_SUN_dtor_state_final - SUN";
                case DwarfNative.DW_AT_SUN_dtor_state_deltas: return "DW_AT_SUN_dtor_state_deltas - SUN";
                case DwarfNative.DW_AT_SUN_import_by_lname: return "DW_AT_SUN_import_by_lname - SUN";
                case DwarfNative.DW_AT_SUN_f90_use_only: return "DW_AT_SUN_f90_use_only - SUN";
                case DwarfNative.DW_AT_SUN_namelist_spec: return "DW_AT_SUN_namelist_spec - SUN";
                case DwarfNative.DW_AT_SUN_is_omp_child_func: return "DW_AT_SUN_is_omp_child_func - SUN";
                case DwarfNative.DW_AT_SUN_fortran_main_alias: return "DW_AT_SUN_fortran_main_alias - SUN";
                case DwarfNative.DW_AT_SUN_fortran_based: return "DW_AT_SUN_fortran_based - SUN";
                case DwarfNative.DW_AT_use_GNAT_descriptive_type: return "DW_AT_use_GNAT_descriptive_type - GNAT";
                case DwarfNative.DW_AT_GNAT_descriptive_type: return "DW_AT_GNAT_descriptive_type - GNAT";
                case DwarfNative.DW_AT_upc_threads_scaled: return "DW_AT_upc_threads_scaled - UPC";
                case DwarfNative.DW_AT_PGI_lbase: return "DW_AT_PGI_lbase - PGI. Block, constant, reference. This attribute is an ASTPLAB extension used to describe the array local base.";
                case DwarfNative.DW_AT_PGI_soffset: return "DW_AT_PGI_soffset - PGI. Block, constant, reference. ASTPLAB adds this attribute to describe the section offset, or the offset to the first element in the dimension.";
                case DwarfNative.DW_AT_PGI_lstride: return "DW_AT_PGI_lstride - PGI. Block, constant, reference. ASTPLAB adds this attribute to describe the linear stride or the distance between elements in the dimension.";
                case DwarfNative.DW_AT_APPLE_optimized: return "DW_AT_APPLE_optimized - Apple";
                case DwarfNative.DW_AT_APPLE_flags: return "DW_AT_APPLE_flags - Apple";
                case DwarfNative.DW_AT_APPLE_isa: return "DW_AT_APPLE_isa - Apple";
                case DwarfNative.DW_AT_APPLE_block: return "DW_AT_APPLE_block - Apple";
                case DwarfNative.DW_AT_APPLE_major_runtime_vers: return "DW_AT_APPLE_major_runtime_vers - Apple";
                case DwarfNative.DW_AT_APPLE_runtime_class: return "DW_AT_APPLE_runtime_class - Apple";
                case DwarfNative.DW_AT_APPLE_omit_frame_ptr: return "DW_AT_APPLE_omit_frame_ptr - Apple";
                case DwarfNative.DW_AT_hi_user: return "DW_AT_hi_user";
                default: return "Unknown DwarfAttributeName";
            }
        }
    }
    
    public readonly partial struct DwarfAttributeForm
    {
        public static readonly DwarfAttributeForm addr = new DwarfAttributeForm(DwarfNative.DW_FORM_addr);
        
        public static readonly DwarfAttributeForm block2 = new DwarfAttributeForm(DwarfNative.DW_FORM_block2);
        
        public static readonly DwarfAttributeForm block4 = new DwarfAttributeForm(DwarfNative.DW_FORM_block4);
        
        public static readonly DwarfAttributeForm data2 = new DwarfAttributeForm(DwarfNative.DW_FORM_data2);
        
        public static readonly DwarfAttributeForm data4 = new DwarfAttributeForm(DwarfNative.DW_FORM_data4);
        
        public static readonly DwarfAttributeForm data8 = new DwarfAttributeForm(DwarfNative.DW_FORM_data8);
        
        public static readonly DwarfAttributeForm @string = new DwarfAttributeForm(DwarfNative.DW_FORM_string);
        
        public static readonly DwarfAttributeForm block = new DwarfAttributeForm(DwarfNative.DW_FORM_block);
        
        public static readonly DwarfAttributeForm block1 = new DwarfAttributeForm(DwarfNative.DW_FORM_block1);
        
        public static readonly DwarfAttributeForm data1 = new DwarfAttributeForm(DwarfNative.DW_FORM_data1);
        
        public static readonly DwarfAttributeForm flag = new DwarfAttributeForm(DwarfNative.DW_FORM_flag);
        
        public static readonly DwarfAttributeForm sdata = new DwarfAttributeForm(DwarfNative.DW_FORM_sdata);
        
        public static readonly DwarfAttributeForm strp = new DwarfAttributeForm(DwarfNative.DW_FORM_strp);
        
        public static readonly DwarfAttributeForm udata = new DwarfAttributeForm(DwarfNative.DW_FORM_udata);
        
        public static readonly DwarfAttributeForm ref_addr = new DwarfAttributeForm(DwarfNative.DW_FORM_ref_addr);
        
        public static readonly DwarfAttributeForm ref1 = new DwarfAttributeForm(DwarfNative.DW_FORM_ref1);
        
        public static readonly DwarfAttributeForm ref2 = new DwarfAttributeForm(DwarfNative.DW_FORM_ref2);
        
        public static readonly DwarfAttributeForm ref4 = new DwarfAttributeForm(DwarfNative.DW_FORM_ref4);
        
        public static readonly DwarfAttributeForm ref8 = new DwarfAttributeForm(DwarfNative.DW_FORM_ref8);
        
        public static readonly DwarfAttributeForm ref_udata = new DwarfAttributeForm(DwarfNative.DW_FORM_ref_udata);
        
        public static readonly DwarfAttributeForm indirect = new DwarfAttributeForm(DwarfNative.DW_FORM_indirect);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeForm sec_offset = new DwarfAttributeForm(DwarfNative.DW_FORM_sec_offset);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeForm exprloc = new DwarfAttributeForm(DwarfNative.DW_FORM_exprloc);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeForm flag_present = new DwarfAttributeForm(DwarfNative.DW_FORM_flag_present);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm strx = new DwarfAttributeForm(DwarfNative.DW_FORM_strx);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm addrx = new DwarfAttributeForm(DwarfNative.DW_FORM_addrx);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm ref_sup4 = new DwarfAttributeForm(DwarfNative.DW_FORM_ref_sup4);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm strp_sup = new DwarfAttributeForm(DwarfNative.DW_FORM_strp_sup);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm data16 = new DwarfAttributeForm(DwarfNative.DW_FORM_data16);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm line_strp = new DwarfAttributeForm(DwarfNative.DW_FORM_line_strp);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfAttributeForm ref_sig8 = new DwarfAttributeForm(DwarfNative.DW_FORM_ref_sig8);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm implicit_const = new DwarfAttributeForm(DwarfNative.DW_FORM_implicit_const);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm loclistx = new DwarfAttributeForm(DwarfNative.DW_FORM_loclistx);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm rnglistx = new DwarfAttributeForm(DwarfNative.DW_FORM_rnglistx);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm ref_sup8 = new DwarfAttributeForm(DwarfNative.DW_FORM_ref_sup8);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm strx1 = new DwarfAttributeForm(DwarfNative.DW_FORM_strx1);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm strx2 = new DwarfAttributeForm(DwarfNative.DW_FORM_strx2);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm strx3 = new DwarfAttributeForm(DwarfNative.DW_FORM_strx3);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm strx4 = new DwarfAttributeForm(DwarfNative.DW_FORM_strx4);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm addrx1 = new DwarfAttributeForm(DwarfNative.DW_FORM_addrx1);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm addrx2 = new DwarfAttributeForm(DwarfNative.DW_FORM_addrx2);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm addrx3 = new DwarfAttributeForm(DwarfNative.DW_FORM_addrx3);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfAttributeForm addrx4 = new DwarfAttributeForm(DwarfNative.DW_FORM_addrx4);
        
        /// <summary>
        /// GNU extension in debug_info.dwo.
        /// </summary>
        public static readonly DwarfAttributeForm GNU_addr_index = new DwarfAttributeForm(DwarfNative.DW_FORM_GNU_addr_index);
        
        /// <summary>
        /// GNU extension, somewhat like DW_FORM_strp
        /// </summary>
        public static readonly DwarfAttributeForm GNU_str_index = new DwarfAttributeForm(DwarfNative.DW_FORM_GNU_str_index);
        
        /// <summary>
        /// GNU extension. Offset in .debug_info.
        /// </summary>
        public static readonly DwarfAttributeForm GNU_ref_alt = new DwarfAttributeForm(DwarfNative.DW_FORM_GNU_ref_alt);
        
        /// <summary>
        /// GNU extension. Offset in .debug_str of another object file.
        /// </summary>
        public static readonly DwarfAttributeForm GNU_strp_alt = new DwarfAttributeForm(DwarfNative.DW_FORM_GNU_strp_alt);
        
        private string ToStringInternal()
        {
            switch (Value)
            {
                case DwarfNative.DW_FORM_addr: return "DW_FORM_addr";
                case DwarfNative.DW_FORM_block2: return "DW_FORM_block2";
                case DwarfNative.DW_FORM_block4: return "DW_FORM_block4";
                case DwarfNative.DW_FORM_data2: return "DW_FORM_data2";
                case DwarfNative.DW_FORM_data4: return "DW_FORM_data4";
                case DwarfNative.DW_FORM_data8: return "DW_FORM_data8";
                case DwarfNative.DW_FORM_string: return "DW_FORM_string";
                case DwarfNative.DW_FORM_block: return "DW_FORM_block";
                case DwarfNative.DW_FORM_block1: return "DW_FORM_block1";
                case DwarfNative.DW_FORM_data1: return "DW_FORM_data1";
                case DwarfNative.DW_FORM_flag: return "DW_FORM_flag";
                case DwarfNative.DW_FORM_sdata: return "DW_FORM_sdata";
                case DwarfNative.DW_FORM_strp: return "DW_FORM_strp";
                case DwarfNative.DW_FORM_udata: return "DW_FORM_udata";
                case DwarfNative.DW_FORM_ref_addr: return "DW_FORM_ref_addr";
                case DwarfNative.DW_FORM_ref1: return "DW_FORM_ref1";
                case DwarfNative.DW_FORM_ref2: return "DW_FORM_ref2";
                case DwarfNative.DW_FORM_ref4: return "DW_FORM_ref4";
                case DwarfNative.DW_FORM_ref8: return "DW_FORM_ref8";
                case DwarfNative.DW_FORM_ref_udata: return "DW_FORM_ref_udata";
                case DwarfNative.DW_FORM_indirect: return "DW_FORM_indirect";
                case DwarfNative.DW_FORM_sec_offset: return "DW_FORM_sec_offset - DWARF4";
                case DwarfNative.DW_FORM_exprloc: return "DW_FORM_exprloc - DWARF4";
                case DwarfNative.DW_FORM_flag_present: return "DW_FORM_flag_present - DWARF4";
                case DwarfNative.DW_FORM_strx: return "DW_FORM_strx - DWARF5";
                case DwarfNative.DW_FORM_addrx: return "DW_FORM_addrx - DWARF5";
                case DwarfNative.DW_FORM_ref_sup4: return "DW_FORM_ref_sup4 - DWARF5";
                case DwarfNative.DW_FORM_strp_sup: return "DW_FORM_strp_sup - DWARF5";
                case DwarfNative.DW_FORM_data16: return "DW_FORM_data16 - DWARF5";
                case DwarfNative.DW_FORM_line_strp: return "DW_FORM_line_strp - DWARF5";
                case DwarfNative.DW_FORM_ref_sig8: return "DW_FORM_ref_sig8 - DWARF4";
                case DwarfNative.DW_FORM_implicit_const: return "DW_FORM_implicit_const - DWARF5";
                case DwarfNative.DW_FORM_loclistx: return "DW_FORM_loclistx - DWARF5";
                case DwarfNative.DW_FORM_rnglistx: return "DW_FORM_rnglistx - DWARF5";
                case DwarfNative.DW_FORM_ref_sup8: return "DW_FORM_ref_sup8 - DWARF5";
                case DwarfNative.DW_FORM_strx1: return "DW_FORM_strx1 - DWARF5";
                case DwarfNative.DW_FORM_strx2: return "DW_FORM_strx2 - DWARF5";
                case DwarfNative.DW_FORM_strx3: return "DW_FORM_strx3 - DWARF5";
                case DwarfNative.DW_FORM_strx4: return "DW_FORM_strx4 - DWARF5";
                case DwarfNative.DW_FORM_addrx1: return "DW_FORM_addrx1 - DWARF5";
                case DwarfNative.DW_FORM_addrx2: return "DW_FORM_addrx2 - DWARF5";
                case DwarfNative.DW_FORM_addrx3: return "DW_FORM_addrx3 - DWARF5";
                case DwarfNative.DW_FORM_addrx4: return "DW_FORM_addrx4 - DWARF5";
                case DwarfNative.DW_FORM_GNU_addr_index: return "DW_FORM_GNU_addr_index - GNU extension in debug_info.dwo.";
                case DwarfNative.DW_FORM_GNU_str_index: return "DW_FORM_GNU_str_index - GNU extension, somewhat like DW_FORM_strp";
                case DwarfNative.DW_FORM_GNU_ref_alt: return "DW_FORM_GNU_ref_alt - GNU extension. Offset in .debug_info.";
                case DwarfNative.DW_FORM_GNU_strp_alt: return "DW_FORM_GNU_strp_alt - GNU extension. Offset in .debug_str of another object file.";
                default: return "Unknown DwarfAttributeForm";
            }
        }
    }
    
    public readonly partial struct DwarfTag
    {
        public static readonly DwarfTag array_type = new DwarfTag(DwarfNative.DW_TAG_array_type);
        
        public static readonly DwarfTag class_type = new DwarfTag(DwarfNative.DW_TAG_class_type);
        
        public static readonly DwarfTag entry_point = new DwarfTag(DwarfNative.DW_TAG_entry_point);
        
        public static readonly DwarfTag enumeration_type = new DwarfTag(DwarfNative.DW_TAG_enumeration_type);
        
        public static readonly DwarfTag formal_parameter = new DwarfTag(DwarfNative.DW_TAG_formal_parameter);
        
        public static readonly DwarfTag imported_declaration = new DwarfTag(DwarfNative.DW_TAG_imported_declaration);
        
        public static readonly DwarfTag label = new DwarfTag(DwarfNative.DW_TAG_label);
        
        public static readonly DwarfTag lexical_block = new DwarfTag(DwarfNative.DW_TAG_lexical_block);
        
        public static readonly DwarfTag member = new DwarfTag(DwarfNative.DW_TAG_member);
        
        public static readonly DwarfTag pointer_type = new DwarfTag(DwarfNative.DW_TAG_pointer_type);
        
        public static readonly DwarfTag reference_type = new DwarfTag(DwarfNative.DW_TAG_reference_type);
        
        public static readonly DwarfTag compile_unit = new DwarfTag(DwarfNative.DW_TAG_compile_unit);
        
        public static readonly DwarfTag string_type = new DwarfTag(DwarfNative.DW_TAG_string_type);
        
        public static readonly DwarfTag structure_type = new DwarfTag(DwarfNative.DW_TAG_structure_type);
        
        public static readonly DwarfTag subroutine_type = new DwarfTag(DwarfNative.DW_TAG_subroutine_type);
        
        public static readonly DwarfTag typedef = new DwarfTag(DwarfNative.DW_TAG_typedef);
        
        public static readonly DwarfTag union_type = new DwarfTag(DwarfNative.DW_TAG_union_type);
        
        public static readonly DwarfTag unspecified_parameters = new DwarfTag(DwarfNative.DW_TAG_unspecified_parameters);
        
        public static readonly DwarfTag variant = new DwarfTag(DwarfNative.DW_TAG_variant);
        
        public static readonly DwarfTag common_block = new DwarfTag(DwarfNative.DW_TAG_common_block);
        
        public static readonly DwarfTag common_inclusion = new DwarfTag(DwarfNative.DW_TAG_common_inclusion);
        
        public static readonly DwarfTag inheritance = new DwarfTag(DwarfNative.DW_TAG_inheritance);
        
        public static readonly DwarfTag inlined_subroutine = new DwarfTag(DwarfNative.DW_TAG_inlined_subroutine);
        
        public static readonly DwarfTag module = new DwarfTag(DwarfNative.DW_TAG_module);
        
        public static readonly DwarfTag ptr_to_member_type = new DwarfTag(DwarfNative.DW_TAG_ptr_to_member_type);
        
        public static readonly DwarfTag set_type = new DwarfTag(DwarfNative.DW_TAG_set_type);
        
        public static readonly DwarfTag subrange_type = new DwarfTag(DwarfNative.DW_TAG_subrange_type);
        
        public static readonly DwarfTag with_stmt = new DwarfTag(DwarfNative.DW_TAG_with_stmt);
        
        public static readonly DwarfTag access_declaration = new DwarfTag(DwarfNative.DW_TAG_access_declaration);
        
        public static readonly DwarfTag base_type = new DwarfTag(DwarfNative.DW_TAG_base_type);
        
        public static readonly DwarfTag catch_block = new DwarfTag(DwarfNative.DW_TAG_catch_block);
        
        public static readonly DwarfTag const_type = new DwarfTag(DwarfNative.DW_TAG_const_type);
        
        public static readonly DwarfTag constant = new DwarfTag(DwarfNative.DW_TAG_constant);
        
        public static readonly DwarfTag enumerator = new DwarfTag(DwarfNative.DW_TAG_enumerator);
        
        public static readonly DwarfTag file_type = new DwarfTag(DwarfNative.DW_TAG_file_type);
        
        public static readonly DwarfTag friend = new DwarfTag(DwarfNative.DW_TAG_friend);
        
        public static readonly DwarfTag namelist = new DwarfTag(DwarfNative.DW_TAG_namelist);
        
        /// <summary>
        /// DWARF3/2 spelling
        /// </summary>
        public static readonly DwarfTag namelist_item = new DwarfTag(DwarfNative.DW_TAG_namelist_item);
        
        /// <summary>
        /// SGI misspelling/typo
        /// </summary>
        public static readonly DwarfTag namelist_items = new DwarfTag(DwarfNative.DW_TAG_namelist_items);
        
        public static readonly DwarfTag packed_type = new DwarfTag(DwarfNative.DW_TAG_packed_type);
        
        public static readonly DwarfTag subprogram = new DwarfTag(DwarfNative.DW_TAG_subprogram);
        
        /// <summary>
        /// DWARF3/2 spelling
        /// </summary>
        public static readonly DwarfTag template_type_parameter = new DwarfTag(DwarfNative.DW_TAG_template_type_parameter);
        
        /// <summary>
        /// DWARF2   spelling
        /// </summary>
        public static readonly DwarfTag template_type_param = new DwarfTag(DwarfNative.DW_TAG_template_type_param);
        
        /// <summary>
        /// DWARF3/2 spelling
        /// </summary>
        public static readonly DwarfTag template_value_parameter = new DwarfTag(DwarfNative.DW_TAG_template_value_parameter);
        
        /// <summary>
        /// DWARF2   spelling
        /// </summary>
        public static readonly DwarfTag template_value_param = new DwarfTag(DwarfNative.DW_TAG_template_value_param);
        
        public static readonly DwarfTag thrown_type = new DwarfTag(DwarfNative.DW_TAG_thrown_type);
        
        public static readonly DwarfTag try_block = new DwarfTag(DwarfNative.DW_TAG_try_block);
        
        public static readonly DwarfTag variant_part = new DwarfTag(DwarfNative.DW_TAG_variant_part);
        
        public static readonly DwarfTag variable = new DwarfTag(DwarfNative.DW_TAG_variable);
        
        public static readonly DwarfTag volatile_type = new DwarfTag(DwarfNative.DW_TAG_volatile_type);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfTag dwarf_procedure = new DwarfTag(DwarfNative.DW_TAG_dwarf_procedure);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfTag restrict_type = new DwarfTag(DwarfNative.DW_TAG_restrict_type);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfTag interface_type = new DwarfTag(DwarfNative.DW_TAG_interface_type);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfTag @namespace = new DwarfTag(DwarfNative.DW_TAG_namespace);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfTag imported_module = new DwarfTag(DwarfNative.DW_TAG_imported_module);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfTag unspecified_type = new DwarfTag(DwarfNative.DW_TAG_unspecified_type);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfTag partial_unit = new DwarfTag(DwarfNative.DW_TAG_partial_unit);
        
        /// <summary>
        /// DWARF3
        /// </summary>
        public static readonly DwarfTag imported_unit = new DwarfTag(DwarfNative.DW_TAG_imported_unit);
        
        /// <summary>
        /// Withdrawn from DWARF3 by DWARF3f.
        /// </summary>
        public static readonly DwarfTag mutable_type = new DwarfTag(DwarfNative.DW_TAG_mutable_type);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfTag condition = new DwarfTag(DwarfNative.DW_TAG_condition);
        
        /// <summary>
        /// DWARF3f
        /// </summary>
        public static readonly DwarfTag shared_type = new DwarfTag(DwarfNative.DW_TAG_shared_type);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfTag type_unit = new DwarfTag(DwarfNative.DW_TAG_type_unit);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfTag rvalue_reference_type = new DwarfTag(DwarfNative.DW_TAG_rvalue_reference_type);
        
        /// <summary>
        /// DWARF4
        /// </summary>
        public static readonly DwarfTag template_alias = new DwarfTag(DwarfNative.DW_TAG_template_alias);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfTag coarray_type = new DwarfTag(DwarfNative.DW_TAG_coarray_type);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfTag generic_subrange = new DwarfTag(DwarfNative.DW_TAG_generic_subrange);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfTag dynamic_type = new DwarfTag(DwarfNative.DW_TAG_dynamic_type);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfTag atomic_type = new DwarfTag(DwarfNative.DW_TAG_atomic_type);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfTag call_site = new DwarfTag(DwarfNative.DW_TAG_call_site);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfTag call_site_parameter = new DwarfTag(DwarfNative.DW_TAG_call_site_parameter);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfTag skeleton_unit = new DwarfTag(DwarfNative.DW_TAG_skeleton_unit);
        
        /// <summary>
        /// DWARF5
        /// </summary>
        public static readonly DwarfTag immutable_type = new DwarfTag(DwarfNative.DW_TAG_immutable_type);
        
        public static readonly DwarfTag lo_user = new DwarfTag(DwarfNative.DW_TAG_lo_user);
        
        public static readonly DwarfTag MIPS_loop = new DwarfTag(DwarfNative.DW_TAG_MIPS_loop);
        
        /// <summary>
        /// HP
        /// </summary>
        public static readonly DwarfTag HP_array_descriptor = new DwarfTag(DwarfNative.DW_TAG_HP_array_descriptor);
        
        /// <summary>
        /// GNU. Fortran.
        /// </summary>
        public static readonly DwarfTag format_label = new DwarfTag(DwarfNative.DW_TAG_format_label);
        
        /// <summary>
        /// GNU. For C++
        /// </summary>
        public static readonly DwarfTag function_template = new DwarfTag(DwarfNative.DW_TAG_function_template);
        
        /// <summary>
        /// GNU. For C++
        /// </summary>
        public static readonly DwarfTag class_template = new DwarfTag(DwarfNative.DW_TAG_class_template);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfTag GNU_BINCL = new DwarfTag(DwarfNative.DW_TAG_GNU_BINCL);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfTag GNU_EINCL = new DwarfTag(DwarfNative.DW_TAG_GNU_EINCL);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfTag GNU_template_template_parameter = new DwarfTag(DwarfNative.DW_TAG_GNU_template_template_parameter);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfTag GNU_template_template_param = new DwarfTag(DwarfNative.DW_TAG_GNU_template_template_param);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfTag GNU_template_parameter_pack = new DwarfTag(DwarfNative.DW_TAG_GNU_template_parameter_pack);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfTag GNU_formal_parameter_pack = new DwarfTag(DwarfNative.DW_TAG_GNU_formal_parameter_pack);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfTag GNU_call_site = new DwarfTag(DwarfNative.DW_TAG_GNU_call_site);
        
        /// <summary>
        /// GNU
        /// </summary>
        public static readonly DwarfTag GNU_call_site_parameter = new DwarfTag(DwarfNative.DW_TAG_GNU_call_site_parameter);
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public static readonly DwarfTag ALTIUM_circ_type = new DwarfTag(DwarfNative.DW_TAG_ALTIUM_circ_type);
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public static readonly DwarfTag ALTIUM_mwa_circ_type = new DwarfTag(DwarfNative.DW_TAG_ALTIUM_mwa_circ_type);
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public static readonly DwarfTag ALTIUM_rev_carry_type = new DwarfTag(DwarfNative.DW_TAG_ALTIUM_rev_carry_type);
        
        /// <summary>
        /// ALTIUM
        /// </summary>
        public static readonly DwarfTag ALTIUM_rom = new DwarfTag(DwarfNative.DW_TAG_ALTIUM_rom);
        
        /// <summary>
        /// UPC
        /// </summary>
        public static readonly DwarfTag upc_shared_type = new DwarfTag(DwarfNative.DW_TAG_upc_shared_type);
        
        /// <summary>
        /// UPC
        /// </summary>
        public static readonly DwarfTag upc_strict_type = new DwarfTag(DwarfNative.DW_TAG_upc_strict_type);
        
        /// <summary>
        /// UPC
        /// </summary>
        public static readonly DwarfTag upc_relaxed_type = new DwarfTag(DwarfNative.DW_TAG_upc_relaxed_type);
        
        /// <summary>
        /// PGI
        /// </summary>
        public static readonly DwarfTag PGI_kanji_type = new DwarfTag(DwarfNative.DW_TAG_PGI_kanji_type);
        
        /// <summary>
        /// PGI
        /// </summary>
        public static readonly DwarfTag PGI_interface_block = new DwarfTag(DwarfNative.DW_TAG_PGI_interface_block);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_function_template = new DwarfTag(DwarfNative.DW_TAG_SUN_function_template);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_class_template = new DwarfTag(DwarfNative.DW_TAG_SUN_class_template);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_struct_template = new DwarfTag(DwarfNative.DW_TAG_SUN_struct_template);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_union_template = new DwarfTag(DwarfNative.DW_TAG_SUN_union_template);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_indirect_inheritance = new DwarfTag(DwarfNative.DW_TAG_SUN_indirect_inheritance);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_codeflags = new DwarfTag(DwarfNative.DW_TAG_SUN_codeflags);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_memop_info = new DwarfTag(DwarfNative.DW_TAG_SUN_memop_info);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_omp_child_func = new DwarfTag(DwarfNative.DW_TAG_SUN_omp_child_func);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_rtti_descriptor = new DwarfTag(DwarfNative.DW_TAG_SUN_rtti_descriptor);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_dtor_info = new DwarfTag(DwarfNative.DW_TAG_SUN_dtor_info);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_dtor = new DwarfTag(DwarfNative.DW_TAG_SUN_dtor);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_f90_interface = new DwarfTag(DwarfNative.DW_TAG_SUN_f90_interface);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_fortran_vax_structure = new DwarfTag(DwarfNative.DW_TAG_SUN_fortran_vax_structure);
        
        /// <summary>
        /// SUN
        /// </summary>
        public static readonly DwarfTag SUN_hi = new DwarfTag(DwarfNative.DW_TAG_SUN_hi);
        
        public static readonly DwarfTag hi_user = new DwarfTag(DwarfNative.DW_TAG_hi_user);
        
        private string ToStringInternal()
        {
            switch (Value)
            {
                case DwarfNative.DW_TAG_array_type: return "DW_TAG_array_type";
                case DwarfNative.DW_TAG_class_type: return "DW_TAG_class_type";
                case DwarfNative.DW_TAG_entry_point: return "DW_TAG_entry_point";
                case DwarfNative.DW_TAG_enumeration_type: return "DW_TAG_enumeration_type";
                case DwarfNative.DW_TAG_formal_parameter: return "DW_TAG_formal_parameter";
                case DwarfNative.DW_TAG_imported_declaration: return "DW_TAG_imported_declaration";
                case DwarfNative.DW_TAG_label: return "DW_TAG_label";
                case DwarfNative.DW_TAG_lexical_block: return "DW_TAG_lexical_block";
                case DwarfNative.DW_TAG_member: return "DW_TAG_member";
                case DwarfNative.DW_TAG_pointer_type: return "DW_TAG_pointer_type";
                case DwarfNative.DW_TAG_reference_type: return "DW_TAG_reference_type";
                case DwarfNative.DW_TAG_compile_unit: return "DW_TAG_compile_unit";
                case DwarfNative.DW_TAG_string_type: return "DW_TAG_string_type";
                case DwarfNative.DW_TAG_structure_type: return "DW_TAG_structure_type";
                case DwarfNative.DW_TAG_subroutine_type: return "DW_TAG_subroutine_type";
                case DwarfNative.DW_TAG_typedef: return "DW_TAG_typedef";
                case DwarfNative.DW_TAG_union_type: return "DW_TAG_union_type";
                case DwarfNative.DW_TAG_unspecified_parameters: return "DW_TAG_unspecified_parameters";
                case DwarfNative.DW_TAG_variant: return "DW_TAG_variant";
                case DwarfNative.DW_TAG_common_block: return "DW_TAG_common_block";
                case DwarfNative.DW_TAG_common_inclusion: return "DW_TAG_common_inclusion";
                case DwarfNative.DW_TAG_inheritance: return "DW_TAG_inheritance";
                case DwarfNative.DW_TAG_inlined_subroutine: return "DW_TAG_inlined_subroutine";
                case DwarfNative.DW_TAG_module: return "DW_TAG_module";
                case DwarfNative.DW_TAG_ptr_to_member_type: return "DW_TAG_ptr_to_member_type";
                case DwarfNative.DW_TAG_set_type: return "DW_TAG_set_type";
                case DwarfNative.DW_TAG_subrange_type: return "DW_TAG_subrange_type";
                case DwarfNative.DW_TAG_with_stmt: return "DW_TAG_with_stmt";
                case DwarfNative.DW_TAG_access_declaration: return "DW_TAG_access_declaration";
                case DwarfNative.DW_TAG_base_type: return "DW_TAG_base_type";
                case DwarfNative.DW_TAG_catch_block: return "DW_TAG_catch_block";
                case DwarfNative.DW_TAG_const_type: return "DW_TAG_const_type";
                case DwarfNative.DW_TAG_constant: return "DW_TAG_constant";
                case DwarfNative.DW_TAG_enumerator: return "DW_TAG_enumerator";
                case DwarfNative.DW_TAG_file_type: return "DW_TAG_file_type";
                case DwarfNative.DW_TAG_friend: return "DW_TAG_friend";
                case DwarfNative.DW_TAG_namelist: return "DW_TAG_namelist";
                case DwarfNative.DW_TAG_namelist_item: return "DW_TAG_namelist_item - DWARF3/2 spelling";
                case DwarfNative.DW_TAG_packed_type: return "DW_TAG_packed_type";
                case DwarfNative.DW_TAG_subprogram: return "DW_TAG_subprogram";
                case DwarfNative.DW_TAG_template_type_parameter: return "DW_TAG_template_type_parameter - DWARF3/2 spelling";
                case DwarfNative.DW_TAG_template_value_parameter: return "DW_TAG_template_value_parameter - DWARF3/2 spelling";
                case DwarfNative.DW_TAG_thrown_type: return "DW_TAG_thrown_type";
                case DwarfNative.DW_TAG_try_block: return "DW_TAG_try_block";
                case DwarfNative.DW_TAG_variant_part: return "DW_TAG_variant_part";
                case DwarfNative.DW_TAG_variable: return "DW_TAG_variable";
                case DwarfNative.DW_TAG_volatile_type: return "DW_TAG_volatile_type";
                case DwarfNative.DW_TAG_dwarf_procedure: return "DW_TAG_dwarf_procedure - DWARF3";
                case DwarfNative.DW_TAG_restrict_type: return "DW_TAG_restrict_type - DWARF3";
                case DwarfNative.DW_TAG_interface_type: return "DW_TAG_interface_type - DWARF3";
                case DwarfNative.DW_TAG_namespace: return "DW_TAG_namespace - DWARF3";
                case DwarfNative.DW_TAG_imported_module: return "DW_TAG_imported_module - DWARF3";
                case DwarfNative.DW_TAG_unspecified_type: return "DW_TAG_unspecified_type - DWARF3";
                case DwarfNative.DW_TAG_partial_unit: return "DW_TAG_partial_unit - DWARF3";
                case DwarfNative.DW_TAG_imported_unit: return "DW_TAG_imported_unit - DWARF3";
                case DwarfNative.DW_TAG_mutable_type: return "DW_TAG_mutable_type - Withdrawn from DWARF3 by DWARF3f.";
                case DwarfNative.DW_TAG_condition: return "DW_TAG_condition - DWARF3f";
                case DwarfNative.DW_TAG_shared_type: return "DW_TAG_shared_type - DWARF3f";
                case DwarfNative.DW_TAG_type_unit: return "DW_TAG_type_unit - DWARF4";
                case DwarfNative.DW_TAG_rvalue_reference_type: return "DW_TAG_rvalue_reference_type - DWARF4";
                case DwarfNative.DW_TAG_template_alias: return "DW_TAG_template_alias - DWARF4";
                case DwarfNative.DW_TAG_coarray_type: return "DW_TAG_coarray_type - DWARF5";
                case DwarfNative.DW_TAG_generic_subrange: return "DW_TAG_generic_subrange - DWARF5";
                case DwarfNative.DW_TAG_dynamic_type: return "DW_TAG_dynamic_type - DWARF5";
                case DwarfNative.DW_TAG_atomic_type: return "DW_TAG_atomic_type - DWARF5";
                case DwarfNative.DW_TAG_call_site: return "DW_TAG_call_site - DWARF5";
                case DwarfNative.DW_TAG_call_site_parameter: return "DW_TAG_call_site_parameter - DWARF5";
                case DwarfNative.DW_TAG_skeleton_unit: return "DW_TAG_skeleton_unit - DWARF5";
                case DwarfNative.DW_TAG_immutable_type: return "DW_TAG_immutable_type - DWARF5";
                case DwarfNative.DW_TAG_lo_user: return "DW_TAG_lo_user";
                case DwarfNative.DW_TAG_MIPS_loop: return "DW_TAG_MIPS_loop";
                case DwarfNative.DW_TAG_HP_array_descriptor: return "DW_TAG_HP_array_descriptor - HP";
                case DwarfNative.DW_TAG_format_label: return "DW_TAG_format_label - GNU. Fortran.";
                case DwarfNative.DW_TAG_function_template: return "DW_TAG_function_template - GNU. For C++";
                case DwarfNative.DW_TAG_class_template: return "DW_TAG_class_template - GNU. For C++";
                case DwarfNative.DW_TAG_GNU_BINCL: return "DW_TAG_GNU_BINCL - GNU";
                case DwarfNative.DW_TAG_GNU_EINCL: return "DW_TAG_GNU_EINCL - GNU";
                case DwarfNative.DW_TAG_GNU_template_template_parameter: return "DW_TAG_GNU_template_template_parameter - GNU";
                case DwarfNative.DW_TAG_GNU_template_parameter_pack: return "DW_TAG_GNU_template_parameter_pack - GNU";
                case DwarfNative.DW_TAG_GNU_formal_parameter_pack: return "DW_TAG_GNU_formal_parameter_pack - GNU";
                case DwarfNative.DW_TAG_GNU_call_site: return "DW_TAG_GNU_call_site - GNU";
                case DwarfNative.DW_TAG_GNU_call_site_parameter: return "DW_TAG_GNU_call_site_parameter - GNU";
                case DwarfNative.DW_TAG_ALTIUM_circ_type: return "DW_TAG_ALTIUM_circ_type - ALTIUM";
                case DwarfNative.DW_TAG_ALTIUM_mwa_circ_type: return "DW_TAG_ALTIUM_mwa_circ_type - ALTIUM";
                case DwarfNative.DW_TAG_ALTIUM_rev_carry_type: return "DW_TAG_ALTIUM_rev_carry_type - ALTIUM";
                case DwarfNative.DW_TAG_ALTIUM_rom: return "DW_TAG_ALTIUM_rom - ALTIUM";
                case DwarfNative.DW_TAG_upc_shared_type: return "DW_TAG_upc_shared_type - UPC";
                case DwarfNative.DW_TAG_upc_strict_type: return "DW_TAG_upc_strict_type - UPC";
                case DwarfNative.DW_TAG_upc_relaxed_type: return "DW_TAG_upc_relaxed_type - UPC";
                case DwarfNative.DW_TAG_PGI_kanji_type: return "DW_TAG_PGI_kanji_type - PGI";
                case DwarfNative.DW_TAG_PGI_interface_block: return "DW_TAG_PGI_interface_block - PGI";
                case DwarfNative.DW_TAG_SUN_function_template: return "DW_TAG_SUN_function_template - SUN";
                case DwarfNative.DW_TAG_SUN_class_template: return "DW_TAG_SUN_class_template - SUN";
                case DwarfNative.DW_TAG_SUN_struct_template: return "DW_TAG_SUN_struct_template - SUN";
                case DwarfNative.DW_TAG_SUN_union_template: return "DW_TAG_SUN_union_template - SUN";
                case DwarfNative.DW_TAG_SUN_indirect_inheritance: return "DW_TAG_SUN_indirect_inheritance - SUN";
                case DwarfNative.DW_TAG_SUN_codeflags: return "DW_TAG_SUN_codeflags - SUN";
                case DwarfNative.DW_TAG_SUN_memop_info: return "DW_TAG_SUN_memop_info - SUN";
                case DwarfNative.DW_TAG_SUN_omp_child_func: return "DW_TAG_SUN_omp_child_func - SUN";
                case DwarfNative.DW_TAG_SUN_rtti_descriptor: return "DW_TAG_SUN_rtti_descriptor - SUN";
                case DwarfNative.DW_TAG_SUN_dtor_info: return "DW_TAG_SUN_dtor_info - SUN";
                case DwarfNative.DW_TAG_SUN_dtor: return "DW_TAG_SUN_dtor - SUN";
                case DwarfNative.DW_TAG_SUN_f90_interface: return "DW_TAG_SUN_f90_interface - SUN";
                case DwarfNative.DW_TAG_SUN_fortran_vax_structure: return "DW_TAG_SUN_fortran_vax_structure - SUN";
                case DwarfNative.DW_TAG_SUN_hi: return "DW_TAG_SUN_hi - SUN";
                case DwarfNative.DW_TAG_hi_user: return "DW_TAG_hi_user";
                default: return "Unknown DwarfTag";
            }
        }
    }
}
